From 716c9cccdc0716b5e8e3cdd3f68fae702f255861 Mon Sep 17 00:00:00 2001
From: Rohit Rawat <xordux@gmail.com>
Date: Wed, 19 Feb 2025 16:59:21 +0000
Subject: [PATCH] CVE-2020-13435

Taken from https://www.sqlite.org/src/info/572105de1d44bca4
---
 lang/sql/sqlite/src/expr.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/lang/sql/sqlite/src/expr.c b/lang/sql/sqlite/src/expr.c
index c0e9ba6..a253446 100644
--- a/lang/sql/sqlite/src/expr.c
+++ b/lang/sql/sqlite/src/expr.c
@@ -2280,7 +2280,10 @@ int sqlite3ExprCodeTarget(Parse *pParse, Expr *pExpr, int target){
   switch( op ){
     case TK_AGG_COLUMN: {
       AggInfo *pAggInfo = pExpr->pAggInfo;
-      struct AggInfo_col *pCol = &pAggInfo->aCol[pExpr->iAgg];
+      struct AggInfo_col *pCol;
+      assert( pAggInfo!=0 );
+      assert( pExpr->iAgg>=0 && pExpr->iAgg<pAggInfo->nColumn );
+      pCol = &pAggInfo->aCol[pExpr->iAgg];
       if( !pAggInfo->directMode ){
         assert( pCol->iMem>0 );
         inReg = pCol->iMem;
@@ -2514,7 +2517,10 @@ int sqlite3ExprCodeTarget(Parse *pParse, Expr *pExpr, int target){
     }
     case TK_AGG_FUNCTION: {
       AggInfo *pInfo = pExpr->pAggInfo;
-      if( pInfo==0 ){
+      if( pInfo==0
+       || NEVER(pExpr->iAgg<0)
+       || NEVER(pExpr->iAgg>=pInfo->nFunc)
+      ){
         assert( !ExprHasProperty(pExpr, EP_IntValue) );
         sqlite3ErrorMsg(pParse, "misuse of aggregate: %s()", pExpr->u.zToken);
       }else{
-- 
2.40.4

