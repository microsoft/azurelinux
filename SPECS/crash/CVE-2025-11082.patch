From 10a09f6166bdf7b65518fb012a285f7fbaa14a09 Mon Sep 17 00:00:00 2001
From: AllSpark <allspark@microsoft.com>
Date: Fri, 3 Oct 2025 08:04:57 +0000
Subject: [PATCH] elf: Don't read beyond .eh_frame section size: ensure
 augmentation string is within .eh_frame bounds using memchr and avoid reading
 past end

Signed-off-by: Azure Linux Security Servicing Account <azurelinux-security@microsoft.com>
Upstream-reference: AI Backport of https://github.com/bminor/binutils-gdb/commit/ea1a0737c7692737a644af0486b71e4a392cbca8
---
 unwind_x86_32_64.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/unwind_x86_32_64.c b/unwind_x86_32_64.c
index c7c30d6..ad9f307 100644
--- a/unwind_x86_32_64.c
+++ b/unwind_x86_32_64.c
@@ -577,6 +577,16 @@ unwind(struct unwind_frame_info *frame, int is_ehframe)
 				while (++ptr < end && *ptr)
 					if (strchr("LPR", *ptr) == NULL)
 						break;
+			/* Ensure augmentation string terminator within bounds (.eh_frame size) */
+			{
+				const char *null_byte = memchr((const void *)ptr, 0, end - ptr);
+				if (null_byte == NULL) {
+					cie = NULL;
+				} else {
+					ptr = (const u8 *)null_byte;
+				}
+			}
+
 			}
 			if (ptr >= end || *ptr)
 				cie = NULL;
-- 
2.45.4

