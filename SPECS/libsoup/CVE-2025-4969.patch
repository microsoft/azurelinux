From 03d0b2357e394009ab5a4ce57d9644ff73093c33 Mon Sep 17 00:00:00 2001
From: Patch Pilot <patch.pilot@microsoft.com>
Date: Tue, 12 Aug 2025 08:58:00 +0000
Subject: [PATCH] soup-multipart: Verify array bounds before accessing its
 members

The boundary could be at a place which, calculated, pointed
before the beginning of the array. Check the bounds, to avoid
read out of the array bounds.

Closes https://gitlab.gnome.org/GNOME/libsoup/-/issues/447

Signed-off-by: Azure Linux Security Servicing Account <azurelinux-security@microsoft.com>
Upstream-reference: /mnt/vss/_work/1/s/autosec/backported/CVE-2025-4969.patch
---
 .gitlab-ci/check-docs.py           |  0
 .gitlab-ci/run-docker.sh           |  0
 get_apache_modules_dirs.py         |  0
 libsoup/generate-header-names.py   |  0
 libsoup/generate-version-header.py |  0
 libsoup/soup-multipart.c           |  2 +-
 tests/autobahn/autobahn-server.sh  |  0
 tests/http2-server.py              |  0
 tests/multipart-test.c             | 23 +++++++++++++++++++++++
 9 files changed, 24 insertions(+), 1 deletion(-)
 mode change 100755 => 100644 .gitlab-ci/check-docs.py
 mode change 100755 => 100644 .gitlab-ci/run-docker.sh
 mode change 100755 => 100644 get_apache_modules_dirs.py
 mode change 100755 => 100644 libsoup/generate-header-names.py
 mode change 100755 => 100644 libsoup/generate-version-header.py
 mode change 100755 => 100644 tests/autobahn/autobahn-server.sh
 mode change 100755 => 100644 tests/http2-server.py

diff --git a/.gitlab-ci/check-docs.py b/.gitlab-ci/check-docs.py
old mode 100755
new mode 100644
diff --git a/.gitlab-ci/run-docker.sh b/.gitlab-ci/run-docker.sh
old mode 100755
new mode 100644
diff --git a/get_apache_modules_dirs.py b/get_apache_modules_dirs.py
old mode 100755
new mode 100644
diff --git a/libsoup/generate-header-names.py b/libsoup/generate-header-names.py
old mode 100755
new mode 100644
diff --git a/libsoup/generate-version-header.py b/libsoup/generate-version-header.py
old mode 100755
new mode 100644
diff --git a/libsoup/soup-multipart.c b/libsoup/soup-multipart.c
index c8cdd3f..8a1b256 100644
--- a/libsoup/soup-multipart.c
+++ b/libsoup/soup-multipart.c
@@ -110,7 +110,7 @@ find_boundary (const char *start, const char *end,
 			continue;
 
 		/* Check that it's at start of line */
-		if (!(b == start || (b[-1] == '\n' && b[-2] == '\r')))
+		if (!(b == start || (b - start >= 2 && b[-1] == '\n' && b[-2] == '\r')))
 			continue;
 
 		/* Check for "--" or "\r\n" after boundary */
diff --git a/tests/autobahn/autobahn-server.sh b/tests/autobahn/autobahn-server.sh
old mode 100755
new mode 100644
diff --git a/tests/http2-server.py b/tests/http2-server.py
old mode 100755
new mode 100644
diff --git a/tests/multipart-test.c b/tests/multipart-test.c
index cfde0b8..2bc8005 100644
--- a/tests/multipart-test.c
+++ b/tests/multipart-test.c
@@ -529,6 +529,28 @@ test_multipart_bounds_bad (void)
 	g_bytes_unref (bytes);
 }
 
+static void
+test_multipart_bounds_bad_2 (void)
+{
+	SoupMultipart *multipart;
+	SoupMessageHeaders *headers;
+	GBytes *bytes;
+	const char *raw_data = "\n--123\r\nline\r\n--123--\r";
+
+	headers = soup_message_headers_new (SOUP_MESSAGE_HEADERS_MULTIPART);
+	soup_message_headers_append (headers, "Content-Type", "multipart/mixed; boundary=\"123\"");
+
+	bytes = g_bytes_new (raw_data, strlen (raw_data));
+
+	multipart = soup_multipart_new_from_message (headers, bytes);
+	g_assert_nonnull (multipart);
+
+	soup_multipart_free (multipart);
+	soup_message_headers_unref (headers);
+	g_bytes_unref (bytes);
+}
+
+
 int
 main (int argc, char **argv)
 {
@@ -558,6 +580,7 @@ main (int argc, char **argv)
 	g_test_add_data_func ("/multipart/async-small-reads", GINT_TO_POINTER (ASYNC_MULTIPART_SMALL_READS), test_multipart);
 	g_test_add_func ("/multipart/bounds-good", test_multipart_bounds_good);
 	g_test_add_func ("/multipart/bounds-bad", test_multipart_bounds_bad);
+	g_test_add_func ("/multipart/bounds-bad-2", test_multipart_bounds_bad_2);
 
 	ret = g_test_run ();
 
-- 
2.45.4

