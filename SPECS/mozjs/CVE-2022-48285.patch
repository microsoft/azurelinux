diff -ruN a/devtools/client/shared/vendor/jszip.js b/devtools/client/shared/vendor/jszip.js
--- a/devtools/client/shared/vendor/jszip.js	2021-04-12 11:13:40.000000000 -0700
+++ b/devtools/client/shared/vendor/jszip.js	2023-06-27 10:54:22.984414395 -0700
@@ -1057,7 +1057,7 @@

 // TODO find a better way to handle this version,
 // a require('package.json').version doesn't work with webpack, see #327
-JSZip.version = "3.2.0";
+JSZip.version = "3.8.0";

 JSZip.loadAsync = function (content, options) {
     return new JSZip().loadAsync(content, options);
@@ -1131,7 +1131,11 @@
         var files = zipEntries.files;
         for (var i = 0; i < files.length; i++) {
             var input = files[i];
-            zip.file(input.fileNameStr, input.decompressed, {
+
+            var unsafeName = input.fileNameStr;
+            var safeName = utils.resolve(input.fileNameStr);
+
+            zip.file(safeName, input.decompressed, {
                 binary: true,
                 optimizedBinaryString: true,
                 date: input.date,
@@ -1141,6 +1145,9 @@
                 dosPermissions : input.dosPermissions,
                 createFolders: options.createFolders
             });
+            if (!input.dir) {
+              zip.file(safeName).unsafeOriginalName = unsafeName;
+            }
         }
         if (zipEntries.zipComment.length) {
             zip.comment = zipEntries.zipComment;
@@ -3352,6 +3359,31 @@
 };

 /**
+ * Resolve all relative path components, "." and "..", in a path. If these relative components
+ * traverse above the root then the resulting path will only contain the final path component.
+ *
+ * All empty components, e.g. "//", are removed.
+ * @param {string} path A path with / or \ separators
+ * @returns {string} The path with all relative path components resolved.
+ */
+exports.resolve = function(path) {
+  var parts = path.split("/");
+  var result = [];
+  for (var index = 0; index < parts.length; index++) {
+      var part = parts[index];
+      // Allow the first and last component to be empty for trailing slashes.
+      if (part === "." || (part === "" && index !== 0 && index !== parts.length - 1)) {
+          continue;
+      } else if (part === "..") {
+          result.pop();
+      } else {
+          result.push(part);
+      }
+  }
+  return result.join("/");
+};
+
+/**
  * Return the type of the input.
  * The type will be in a format valid for JSZip.utils.transformTo : string, array, uint8array, arraybuffer.
  * @param {Object} input the input to identify.
