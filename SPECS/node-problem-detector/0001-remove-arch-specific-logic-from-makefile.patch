From 2ca12f89f9b6a8c1390a7a66b080538f4142beea Mon Sep 17 00:00:00 2001
From: Sean Dougherty <sdougherty@microsoft.com>
Date: Tue, 20 Feb 2024 20:41:16 +0000
Subject: [PATCH] remove arch specific logic from makefile

---
 Makefile | 58 +++++++++++++++-----------------------------------------
 1 file changed, 15 insertions(+), 43 deletions(-)
 mode change 100644 => 100755 Makefile

diff --git a/Makefile b/Makefile
old mode 100644
new mode 100755
index b329e7a..7be5307
--- a/Makefile
+++ b/Makefile
@@ -22,9 +22,9 @@
 all: build
 
 # PLATFORMS is the set of OS_ARCH that NPD can build against.
-LINUX_PLATFORMS=linux_amd64 linux_arm64
+LINUX_PLATFORMS=linux
 DOCKER_PLATFORMS=linux/amd64,linux/arm64
-PLATFORMS=$(LINUX_PLATFORMS) windows_amd64
+PLATFORMS=$(LINUX_PLATFORMS)
 
 # VERSION is the version of the binary.
 VERSION?=$(shell if [ -d .git ]; then echo `git describe --tags --dirty`; else echo "UNKNOWN"; fi)
@@ -77,8 +77,6 @@ BASEIMAGE:=registry.k8s.io/build-image/debian-base:bookworm-v1.0.0
 # Disable cgo by default to make the binary statically linked.
 CGO_ENABLED:=0
 
-# Set default Go architecture to AMD64.
-GOARCH ?= amd64
 
 # Construct the "-tags" parameter used by "go build".
 BUILD_TAGS?=
@@ -126,55 +124,25 @@ ifeq ($(ENABLE_JOURNALD), 1)
 endif
 
 ALL_BINARIES = $(foreach binary, $(BINARIES) $(BINARIES_LINUX_ONLY), ./$(binary)) \
-  $(foreach platform, $(LINUX_PLATFORMS), $(foreach binary, $(BINARIES) $(BINARIES_LINUX_ONLY), output/$(platform)/$(binary))) \
-  $(foreach binary, $(BINARIES), output/windows_amd64/$(binary).exe)
+  $(foreach platform, $(LINUX_PLATFORMS), $(foreach binary, $(BINARIES) $(BINARIES_LINUX_ONLY), output/$(platform)/$(binary)))
 ALL_TARBALLS = $(foreach platform, $(PLATFORMS), $(NPD_NAME_VERSION)-$(platform).tar.gz)
 
-output/windows_amd64/bin/%.exe: $(PKG_SOURCES)
-	GOOS=windows GOARCH=amd64 CGO_ENABLED=$(CGO_ENABLED) go build \
-		-o $@ \
-		-ldflags '-X $(PKG)/pkg/version.version=$(VERSION)' \
-		-tags "$(WINDOWS_BUILD_TAGS)" \
-		./cmd/$(subst -,,$*)
-	touch $@
-
-output/windows_amd64/test/bin/%.exe: $(PKG_SOURCES)
-	cd test && \
-	GOOS=windows GOARCH=amd64 CGO_ENABLED=$(CGO_ENABLED) go build \
-		-o ../$@ \
-		-tags "$(WINDOWS_BUILD_TAGS)" \
-		./e2e/$(subst -,,$*)
-
-output/linux_amd64/bin/%: $(PKG_SOURCES)
-	GOOS=linux GOARCH=amd64 CGO_ENABLED=$(CGO_ENABLED) \
-	  CC=x86_64-linux-gnu-gcc go build \
-		-o $@ \
-		-ldflags '-X $(PKG)/pkg/version.version=$(VERSION)' \
-		-tags "$(LINUX_BUILD_TAGS)" \
-		./cmd/$(subst -,,$*)
-	touch $@
-
-output/linux_amd64/test/bin/%: $(PKG_SOURCES)
-	cd test && \
-	GOOS=linux GOARCH=amd64 CGO_ENABLED=$(CGO_ENABLED) \
-	  CC=x86_64-linux-gnu-gcc go build \
-		-o ../$@ \
-		-tags "$(LINUX_BUILD_TAGS)" \
-		./e2e/$(subst -,,$*)
 
-output/linux_arm64/bin/%: $(PKG_SOURCES)
-	GOOS=linux GOARCH=arm64 CGO_ENABLED=$(CGO_ENABLED) \
-	  CC=aarch64-linux-gnu-gcc go build \
+output/linux/bin/%: $(PKG_SOURCES)
+	GOOS=linux CGO_ENABLED=$(CGO_ENABLED) \
+	  go build \
+		-mod=vendor \
 		-o $@ \
 		-ldflags '-X $(PKG)/pkg/version.version=$(VERSION)' \
 		-tags "$(LINUX_BUILD_TAGS)" \
 		./cmd/$(subst -,,$*)
 	touch $@
 
-output/linux_arm64/test/bin/%: $(PKG_SOURCES)
+output/linux/test/bin/%: $(PKG_SOURCES)
 	cd test && \
-	GOOS=linux GOARCH=arm64 CGO_ENABLED=$(CGO_ENABLED) \
-	  CC=aarch64-linux-gnu-gcc go build \
+	GOOS=linux CGO_ENABLED=$(CGO_ENABLED) \
+	  go build \
+		-mod=vendor \
 		-o ../$@ \
 		-tags "$(LINUX_BUILD_TAGS)" \
 		./e2e/$(subst -,,$*)
@@ -183,6 +151,7 @@ output/linux_arm64/test/bin/%: $(PKG_SOURCES)
 ./bin/log-counter: $(PKG_SOURCES)
 ifeq ($(ENABLE_JOURNALD), 1)
 	CGO_ENABLED=$(CGO_ENABLED) GOOS=linux GOARCH=$(GOARCH) go build \
+		-mod=vendor \
 		-o bin/log-counter \
 		-ldflags '-X $(PKG)/pkg/version.version=$(VERSION)' \
 		-tags "$(LINUX_BUILD_TAGS)" \
@@ -193,6 +162,7 @@ endif
 
 ./bin/node-problem-detector: $(PKG_SOURCES)
 	CGO_ENABLED=$(CGO_ENABLED) GOOS=linux GOARCH=$(GOARCH) go build \
+		-mod=vendor \
 		-o bin/node-problem-detector \
 		-ldflags '-X $(PKG)/pkg/version.version=$(VERSION)' \
 		-tags "$(LINUX_BUILD_TAGS)" \
@@ -201,12 +171,14 @@ endif
 ./test/bin/problem-maker: $(PKG_SOURCES)
 	cd test && \
 	CGO_ENABLED=$(CGO_ENABLED) GOOS=linux GOARCH=$(GOARCH) go build \
+		-mod=vendor \
 		-o bin/problem-maker \
 		-tags "$(LINUX_BUILD_TAGS)" \
 		./e2e/problemmaker/problem_maker.go
 
 ./bin/health-checker: $(PKG_SOURCES)
 	CGO_ENABLED=$(CGO_ENABLED) GOOS=linux GOARCH=$(GOARCH) go build \
+		-mod=vendor \
 		-o bin/health-checker \
 		-ldflags '-X $(PKG)/pkg/version.version=$(VERSION)' \
 		-tags "$(LINUX_BUILD_TAGS)" \
-- 
2.42.0

