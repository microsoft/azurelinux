From f06992f46771c0a092593b9ebf7afd48740b3ed6 Mon Sep 17 00:00:00 2001
From: esrauchg <140440793+esrauchg@users.noreply.github.com>
Date: Sun, 9 Mar 2025 17:23:01 -0400
Subject: [PATCH] Apply depth limit to unknown groups (#756)

* Fix issue where a deeply nested unknown group could cause arbitrarily recursion depth.

* Add drop(os) to fix tests

* Check err message on recursion limit exceeded.

* Run formatter

* Fix test with .unwrap_err()

Upstream Patch Reference: https://github.com/stepancheg/rust-protobuf/commit/f06992f46771c0a092593b9ebf7afd48740b3ed6.patch
---

 vendor/protobuf/.cargo-checksum.json          |  2 +-
 vendor/protobuf/src/coded_input_stream/mod.rs | 71 +++++++++++++++----
 2 files changed, 60 insertions(+), 13 deletions(-)

diff --git a/vendor/protobuf/.cargo-checksum.json b/vendor/protobuf/.cargo-checksum.json
index 8bc959c50..3d8881b49 100644
--- a/vendor/protobuf/.cargo-checksum.json
+++ b/vendor/protobuf/.cargo-checksum.json
@@ -1 +1 @@
-{"files":{"Cargo.toml":"6f1e9e9629c49f82691a02216d23fc558b25a13587af27c56758ed28ff4ae55e","LICENSE.txt":"97647e63047ef75a82ee2928b335df94f45c87e08777dc033393c73294f3a57a","README.md":"a192b942572b5f097e320bf320498b1447fb2f66e7b31ce1ada9d09840255195","benches/coded_input_stream.rs":"4a97758265ebffd6158a84f33f6d3fa7f1449fc4c38094735fac92b2121407a8","benches/coded_output_stream.rs":"43f5ae7444f4f2585aba5b3fd70ff240ed46c72d17d31a4cdbb73013d3c21592","benches/write.rs":"1c8f95a110b465b3f24004bfd7231dd7cf37c2c2ea1ced21919b3c8d80d6b325","build.rs":"d469e5252740987d089efca1875aa554fc6501b152019ac4203d3b5439272441","regenerate.sh":"1fbc73e6a89504821b0b1fefcd621ba022b3c3c33a7aa7aa77bc4ce32cba46ef","src/byteorder.rs":"9e6b481be82182ac99ff9704468b4d64656fb922f90c54ca83a8d7ca1dfd2e3a","src/cached_size.rs":"895788d7356a1fcd0f2d7446996066f8c53a0f36032174a97273997e65440fa0","src/chars.rs":"816a0af0b830ecd43028e40295fe0bf9eb79263f00fee01678c75d4ac5b7e908","src/coded_input_stream/buf_read_iter.rs":"da0b7601f3a05090462350086398a135be8977e0f5889c5315ef0525058d73b8","src/coded_input_stream/buf_read_or_reader.rs":"2bf3befcfce8c97faae7563084a7d93931afc5b886419e491111c15b4139058e","src/coded_input_stream/input_buf.rs":"cf71e63d3aef90188c55b6d42aa7cad47bcba16b27e687e44a15bd45e65b8737","src/coded_input_stream/input_source.rs":"b620f2f95784f390574eb469b79d2f63f86c5453470bef6121201f2a5db125be","src/coded_input_stream/mod.rs":"ee6c11ddd3e224c6d91afe2574b3033525e9d164a15c8ec771cc8ea89de9ded6","src/coded_output_stream/buffer.rs":"cafbbb3f02df26c98a4e5556e99a5a2ce811ffea4c49ba982532a6d9a53ec7d8","src/coded_output_stream/mod.rs":"da38c42311823235ce1ecc0efed83ca5f4c02d1460dfae39efaf0a39cdaa14d9","src/coded_output_stream/output_target.rs":"ab28889b824b91688cb5c17cf79bdbec96aeeea59f22946b9f359b957cc40580","src/coded_output_stream/with.rs":"47541db9f4f51cacd406571f02d6abe8f4837413c7cecbe511fc0c24ef2384f2","src/descriptor.rs":"bbae5b8e7e47e4938c18f832cfce4d26b16fb76f6e6db8d6bfcff66b16bac76e","src/doctest_pb.rs":"6c529d6606e3e21e68d4f746a90b31b1207db8bbc107486e390154490a232849","src/enum_full.rs":"ca658951c42ef539ce6221d8f1b1e5005a1a14393460078c40611bb7091629d0","src/enum_or_unknown.rs":"3088b9d139f296284a44d4f9da9c75476dfa00168358328f46b1c52c73572521","src/enums.rs":"b055cb673aba97c446d9d7c58dfeca977d6c6cc50d819c8cef128da0ef7e62f3","src/error.rs":"1839b319f456b56e2bb3c59f119f4c0bec53a02d52c92619b887bfdb1656183b","src/ext.rs":"b5c43e19ca56612e81560e520831da1746520be7944e506e44e07356b1415bbf","src/fixed.rs":"40b32b11dd53f0dc3de2c73f9003c6c0f762cf802e30e16beb5a22a18f8f2f50","src/lazy.rs":"b202a8cd252b11b013983f27c1ed5eac046674ed156a4e5e63357e15ead746df","src/lib.rs":"8b52bf3f782797fa81b522902851150f0e84ab1245bc39347b0014cef9e57b7e","src/message.rs":"a112b1d5c769d866a586a4c9af9245fa8029991563d2ff33c47e9d4c2b32fef7","src/message_dyn.rs":"c2d06029139a1ef09409227c0c501dd361b485ff1e4fcbf1d2b0cb579cd80fba","src/message_field.rs":"a4f35ebaef7912196e35d585832ccb318f23a0c0aa646de88de6d62079a3063f","src/message_full.rs":"4bbbb917a86aa3b14f63e93db41522c78223036b6e7d219769927059ff70205e","src/misc.rs":"1679b6f8b5c2b4375e71835fb7ca83a4de6db498f092abf5ab3a9f5eaccf0d5a","src/oneof.rs":"de5a694a56931308fc1a790678aaaf8b67d7c6b56c9f7b2fde36a14312863e05","src/oneof_full.rs":"b9d5d95db115b1ebf6e7c222373008d4f9f86e21347ddf50ef23f8cd11b8f777","src/owning_ref.rs":"1face1307d85ef98f5b9752eb45de47884c3ce68d31cec315ebfac6559ab501f","src/plugin.rs":"cfc80fa6541885906b8f21f6a7d2c7d0e83b3f1121093a24e2e55d59f6e1ec02","src/reflect/acc/mod.rs":"23500dd605f11f8def7d0f858a00cf1c85a7b95c293bc125ba0804a949b35162","src/reflect/acc/v2/map.rs":"070d17351d175227cc6b4bd580e1a0e12ea60b483bc67e666ac55526c81a56c2","src/reflect/acc/v2/mod.rs":"86639cfa45e3b2d08020c289001d87910fa972e9fb6a28a38880ccee51002a0c","src/reflect/acc/v2/repeated.rs":"dee457a69c0aae5a6c1cdc1a71300e586dbf7cb845eab5d6c4b64563513bb012","src/reflect/acc/v2/singular/mod.rs":"85bace3cf99fe0b05dce61bf19433077cf29506c6641b001935064fd37ab658f","src/reflect/acc/v2/singular/oneof.rs":"f70db73a0316185b8ae43b82cd29665d1140d920e7d28bb789a438eb06f9c62a","src/reflect/dynamic/map.rs":"da992d492e21e5824e3f96b366dc78b3f546b9de8f66f799f9af32ce74cc5f3f","src/reflect/dynamic/mod.rs":"3ee7a82dbd5410d10eee44fdf3ae8b5f198185d7ff4a608f10a668eba6af3a73","src/reflect/dynamic/optional.rs":"db923e3d343f869c2bf4f157559686251ff9744dfd0560ba1d1b1b46ae1b81fd","src/reflect/dynamic/repeated.rs":"61a7c698b59280564a1deb7200884875a8844120058c3d69ea4d6aa5f6c4266e","src/reflect/enums/generated.rs":"44e5dbe08a1a15067744580c87c6d09f66dc364f2791fc1ecab919e1dacdec09","src/reflect/enums/mod.rs":"aed1b29e4e42f34b26476a6013e64b7ec8876cfa53633583a751c344fd3ab34c","src/reflect/error.rs":"532a9c117606e8597a40d60b3efebc9371c4f746919cc611aaaddf105cbb3608","src/reflect/field/dynamic.rs":"8e81f7b6f684ed58287eb2de20f3abb8dabb062601715421d3d1e4c041101602","src/reflect/field/index.rs":"4aeef75560e52bf865718f9323fc5b2b2318a6e4bb66fadc57f4875999cf15b3","src/reflect/field/mod.rs":"067a91d59a464042c1c9d266382696b4aaf3960e898e4e2378ff065ce3f23de2","src/reflect/field/protobuf_field_type.rs":"6ec9ca95c25a9c9fe70fad51b1221676e9d3d5a6daac37d5633379471d8c4257","src/reflect/field/runtime_field_type.rs":"26166bb9d48caa0287dfe6235937e5bd647692ca75e8ee4855d0e198f9a79d73","src/reflect/file/building.rs":"53806efda5872c32f63f55582b767be8becff1d7bfb4ed0c11947c912ad55a75","src/reflect/file/dynamic.rs":"3e26271c31816dae043eb70c9990a6fc621c9b5241a555d968f731dfd4762489","src/reflect/file/fds.rs":"9a369eaea05a000710bf977cce28d3fad1463f8ffa42df35e4f5ac5de306f9e6","src/reflect/file/generated.rs":"88f3d88ddbcfa01812398ddc5c350c54cc42b15d99223a642574f55d4d6cdf69","src/reflect/file/index.rs":"3d53af11b39b164b488e3850c3a5be5ae4628c172b4475e4ae5b993225bdeae9","src/reflect/file/mod.rs":"b7aa1c4154677630b843c81d35c60f1374d00d44d3477e6e899e18cb7ae97db1","src/reflect/file/syntax.rs":"8d6d6c3a7bbf9217df3550410a9ba1eb9c08295aa410cc5d2e65efe1eec3ca3a","src/reflect/find_message_or_enum.rs":"e8b10159819cce4414da7681cb3ce0b4e62a45adf4e3e7933a3c1b4f8e97cfb8","src/reflect/map/empty.rs":"e8429213086d1f417e8e9785d6353cb6e751e7d76dcce1fcb32c302a7ee0d156","src/reflect/map/generated.rs":"0dd72936b32428cedb4f26250ba6d1c1814a1bb40fd6de423d997e50eb04e914","src/reflect/map/mod.rs":"fc444fd4924423c94dbb983d82baf7d9464d8f90cc51449ce104ed728e32dfd7","src/reflect/message/generated.rs":"c76f5e887534bc9648dd105718f79bb93465549d57b25c4a00957e603749721c","src/reflect/message/is_initialized_is_always_true.rs":"af716e9d0ce233fda9c7dee13814c24c188ea195cf907d81f74fb198ef2760ae","src/reflect/message/message_ref.rs":"80472f804a4dd3b91f6fec4451639ca356f2b33c502775e0fd6b2c3bfbe1be0a","src/reflect/message/mod.rs":"5ef7f5ecdc2de7c0789b8558711a976e2376fcaae67975a10d9f1bd4179703e5","src/reflect/mod.rs":"620cab65b696a13144ed54d589ca8c4176ecb8127b2ba2a294806f649c0fbd9f","src/reflect/name.rs":"0377dcf871ca5add5e168a3bff04d9f01fe5970db4dfb66272def6484dc7d54b","src/reflect/oneof/generated.rs":"c02b7cd7415f52366f6092559643869812db842bd1c383ce7d8759e519ab453a","src/reflect/oneof/mod.rs":"ce662622c10557f4f9bf9ddb04943136f8c74d16009d97496965262dbdf5e2ac","src/reflect/optional/mod.rs":"5dada97750209aeddf1506eea0a59d709aeb3e44bae5443214e0c2950c870952","src/reflect/protobuf_type_box.rs":"5ed50bdefa5eebe8bf0547cb37def38d814653ac7a0d401eb4f05b8a72ebf509","src/reflect/reflect_eq.rs":"1352d0be16ff7dc2089d499b3fbcf40d501406e8648649092aa2cb21f207aac0","src/reflect/repeated/drain_iter.rs":"0f065e5ef884ee90189594b8a92d814c40a4b3ff80ed659f2f8a0ac56795011d","src/reflect/repeated/iter.rs":"f7f7bf56347850f567612feab9542c4658f251ce74b7b8fb7ed6612cb85584f0","src/reflect/repeated/mod.rs":"6084482af4936340e1bfd43ff8d06351c3d0316f26cb9f8b73bd8c16f3e9df98","src/reflect/repeated/transmute.rs":"ecd5b5b2772670b030a6d96b47b54bf8500ec0996920ef0db7d5f4b6f338c493","src/reflect/repeated/vec_downcast.rs":"7f4c2997d313f45bc46a097fad7c579d663c642cba425a7851f590282d58309d","src/reflect/rt/mod.rs":"4f0266be9bd092a6ee49a1f3453ff08eabfcebb65473b6c8552a260ac7a4817b","src/reflect/rt/v2.rs":"d1d7419f5d9d7a80748ded5f67488a7855491416a8cba024ab66a48be0d4ea4c","src/reflect/runtime_type_box.rs":"6d8988ed25218f13da61db5dbbefa621df3fd7f1141669854c6ec9571b3eee6c","src/reflect/runtime_types.rs":"3ae8764ba089ad59a951b1bc14d85c0d37ef61a85572a478d9c1bc4464798fb1","src/reflect/service/index.rs":"4a41f90b6c8b3f5c8349075aec84fcbb90ab3028451d2ba40cb83257ff4d90c7","src/reflect/service/mod.rs":"1d0b5b3d9cd1968731971137ca320a91591ee9ca45828d3e4284da87397044f6","src/reflect/type_dynamic.rs":"37d8443a95616acd5f499bc473d74d5831a1e60cb349b8baf35860352b16f2c3","src/reflect/types.rs":"bdaf23d44bd2e214e3c85543febe16aef5da45d2608fef1dfa4ea6252cf62cb0","src/reflect/value/mod.rs":"56f7ff8c4541108fff20f83f7f12ef173ce398e642b482dc3a4cf92c9e1cea17","src/reflect/value/value_box.rs":"1037d01c52a4f0432e42a2c023f5c68ed458ed60b196597ca78f81b6207ecb83","src/reflect/value/value_ref.rs":"7a3490eb4918ee725ad59219b0fc5810b231eaf2ddf798ab75085b4acc145b2e","src/rt/map.rs":"c4bd4246181a43dc9cf1735ec5882955af595fba8ef839a06e0e1df399848520","src/rt/message.rs":"c9b9b3b8f25b6813b8ca2411f015ae80b2abba377d44f9f9b9c05cb45366229a","src/rt/mod.rs":"db610d871d8fb022ba4634199896534ecb3d6ad22c7e2cabbf4d7ad79e1c8c66","src/rt/packed.rs":"be2fae85812c39d815bcb0463e3ea67774770c25014b764b8712dd2b90d360c6","src/rt/repeated.rs":"213d08349efb21bc02fb5abd1d1c3f039ae1d4368f53f548cdf1999897c60f1c","src/rt/singular.rs":"2c982de7a686a8d0c430ce690297a524e892a70bca33d288c6e9b912d19e994c","src/rt/unknown_or_group.rs":"a0bf9af0bdb6ee4261bdc9d5136288e3d17f7de611b7f61943caf6d8eb38367d","src/rustproto.rs":"ea9f86c6d0356c75db76d50da06c29647c8d2895bb6dcf7e91eccc6535f6c770","src/special.rs":"25e6afb4edfbcfd103a287dcdd1233ccb08ee91efce9471e3d5d370f040973c2","src/text_format/mod.rs":"da0aeb839963afcba1923b68a06264185a927cef3f3075ca958c11fa1e780535","src/text_format/parse.rs":"c7be3464fa8f6624ed2001b450e999f93bea5f6118132b7f372110c7af5e5e71","src/text_format/print.rs":"55edf1f69cc0a66c538949d399e1ae015b8cf46c911863bd4d5b5dc520b56f91","src/timestamp.rs":"f0590e19fd7740bdc65a0dc6f9d73bf55559638515ca7849481022288a9bee43","src/unknown.rs":"fd6091ad04dadbde5793ea42af50fa51cf2e7737696029a9e0d1f001f0c1423d","src/varint/decode.rs":"5e9fdf9fb5fe82ddc223feaf5867c0a081bd67731635f88cb9a5b1faeeb79f82","src/varint/encode.rs":"43c1d67932aca6ea61a368f34233fff88d5d6253f5ebad842cbf69f26245e16d","src/varint/generic.rs":"98e31da80c278cff672ddc8231241cc789ad6de138fa6ca6c0483ff1783f4957","src/varint/mod.rs":"643b5b2443b4e103fc4eeac7844dcda4b9c6b2bab3cfe9fba00145ccea9a4505","src/well_known_types/any.rs":"296ea00846a7e6cce30d02cc2159ec8a147a85c80a73f10b0deada956b2d94e2","src/well_known_types/api.rs":"d67b5e61949514c1350e9041ea612e32360126869b5982b2bffa389cefa30c07","src/well_known_types/duration.rs":"f7f1f07408457647e8ad070fa9acae6c4ea8efa2681541d6e9a436a785add7b1","src/well_known_types/empty.rs":"aa772e9729f81e64c73f1c9481c757bd953d5068e030723b9cf494b227c8d24b","src/well_known_types/field_mask.rs":"e2ea9cb068a2a914d198b86e8511d011aa699d34dfe5f9c0a58f3fec202c5c7c","src/well_known_types/mod.rs":"b141483834c860b221d0946a584389ebcefc2c5f7692ce1f95869c9f83ff2c16","src/well_known_types/source_context.rs":"3429dd5468d0c1587c7b78369c722b8fe12dee7e2c1691bff94ab57a82ba13c2","src/well_known_types/struct_.rs":"56090799d326296b89bee1476550d480b264123997d3cb0c8d518a688818feb9","src/well_known_types/timestamp.rs":"446345055a17e34797b06ddc0830ba61ff62f750004bed2a4aae1ec8bea5f71e","src/well_known_types/type_.rs":"07418c82a4ae2683aa0c1f7abc3ac57a9523b0c62506bc075b9213f3c5c98397","src/well_known_types/wrappers.rs":"ac4dda7cde8b14a19d1fd4a22a857894f14f771a6c2383d50295f2e9a9d2c3fb","src/well_known_types_util/any.rs":"2b2e5cdf1d413bc13485bfc78c84d8403168d6b1a6dbc10d585bf10326120c81","src/well_known_types_util/duration.rs":"e0d9de89f8c7c4b2075f23c2a4451dfec4ae1f28c9784ea39a626a8c3aa9e005","src/well_known_types_util/mod.rs":"81fb1c0721602ffe91c4587f727457b59c8697863e3f853cd9569db5cee973e9","src/well_known_types_util/timestamp.rs":"f55906fef3190fa1786ed736ded16f3ac6de2095cb974af5a476c2a2f91260b3","src/wire_format.rs":"649bd310711e9464d8827eb16754ba8921dd6ebc209f78033fdee11dded8b689","src/zigzag.rs":"0dcbdf54d4bc8141fdc64d074e6f6f7633bbb66cc782cd4bd6d343ce0569c3de"},"package":"4ee4a7d8b91800c8f167a6268d1a1026607368e1adc84e98fe044aeb905302f7"}
\ No newline at end of file
+{"files":{"Cargo.toml":"6f1e9e9629c49f82691a02216d23fc558b25a13587af27c56758ed28ff4ae55e","LICENSE.txt":"97647e63047ef75a82ee2928b335df94f45c87e08777dc033393c73294f3a57a","README.md":"a192b942572b5f097e320bf320498b1447fb2f66e7b31ce1ada9d09840255195","benches/coded_input_stream.rs":"4a97758265ebffd6158a84f33f6d3fa7f1449fc4c38094735fac92b2121407a8","benches/coded_output_stream.rs":"43f5ae7444f4f2585aba5b3fd70ff240ed46c72d17d31a4cdbb73013d3c21592","benches/write.rs":"1c8f95a110b465b3f24004bfd7231dd7cf37c2c2ea1ced21919b3c8d80d6b325","build.rs":"d469e5252740987d089efca1875aa554fc6501b152019ac4203d3b5439272441","regenerate.sh":"1fbc73e6a89504821b0b1fefcd621ba022b3c3c33a7aa7aa77bc4ce32cba46ef","src/byteorder.rs":"9e6b481be82182ac99ff9704468b4d64656fb922f90c54ca83a8d7ca1dfd2e3a","src/cached_size.rs":"895788d7356a1fcd0f2d7446996066f8c53a0f36032174a97273997e65440fa0","src/chars.rs":"816a0af0b830ecd43028e40295fe0bf9eb79263f00fee01678c75d4ac5b7e908","src/coded_input_stream/buf_read_iter.rs":"da0b7601f3a05090462350086398a135be8977e0f5889c5315ef0525058d73b8","src/coded_input_stream/buf_read_or_reader.rs":"2bf3befcfce8c97faae7563084a7d93931afc5b886419e491111c15b4139058e","src/coded_input_stream/input_buf.rs":"cf71e63d3aef90188c55b6d42aa7cad47bcba16b27e687e44a15bd45e65b8737","src/coded_input_stream/input_source.rs":"b620f2f95784f390574eb469b79d2f63f86c5453470bef6121201f2a5db125be","src/coded_input_stream/mod.rs":"9c9eef558aec08a5071303896703aae82a1fa1358d50784e836319e9dcdd2789","src/coded_output_stream/buffer.rs":"cafbbb3f02df26c98a4e5556e99a5a2ce811ffea4c49ba982532a6d9a53ec7d8","src/coded_output_stream/mod.rs":"da38c42311823235ce1ecc0efed83ca5f4c02d1460dfae39efaf0a39cdaa14d9","src/coded_output_stream/output_target.rs":"ab28889b824b91688cb5c17cf79bdbec96aeeea59f22946b9f359b957cc40580","src/coded_output_stream/with.rs":"47541db9f4f51cacd406571f02d6abe8f4837413c7cecbe511fc0c24ef2384f2","src/descriptor.rs":"bbae5b8e7e47e4938c18f832cfce4d26b16fb76f6e6db8d6bfcff66b16bac76e","src/doctest_pb.rs":"6c529d6606e3e21e68d4f746a90b31b1207db8bbc107486e390154490a232849","src/enum_full.rs":"ca658951c42ef539ce6221d8f1b1e5005a1a14393460078c40611bb7091629d0","src/enum_or_unknown.rs":"3088b9d139f296284a44d4f9da9c75476dfa00168358328f46b1c52c73572521","src/enums.rs":"b055cb673aba97c446d9d7c58dfeca977d6c6cc50d819c8cef128da0ef7e62f3","src/error.rs":"1839b319f456b56e2bb3c59f119f4c0bec53a02d52c92619b887bfdb1656183b","src/ext.rs":"b5c43e19ca56612e81560e520831da1746520be7944e506e44e07356b1415bbf","src/fixed.rs":"40b32b11dd53f0dc3de2c73f9003c6c0f762cf802e30e16beb5a22a18f8f2f50","src/lazy.rs":"b202a8cd252b11b013983f27c1ed5eac046674ed156a4e5e63357e15ead746df","src/lib.rs":"8b52bf3f782797fa81b522902851150f0e84ab1245bc39347b0014cef9e57b7e","src/message.rs":"a112b1d5c769d866a586a4c9af9245fa8029991563d2ff33c47e9d4c2b32fef7","src/message_dyn.rs":"c2d06029139a1ef09409227c0c501dd361b485ff1e4fcbf1d2b0cb579cd80fba","src/message_field.rs":"a4f35ebaef7912196e35d585832ccb318f23a0c0aa646de88de6d62079a3063f","src/message_full.rs":"4bbbb917a86aa3b14f63e93db41522c78223036b6e7d219769927059ff70205e","src/misc.rs":"1679b6f8b5c2b4375e71835fb7ca83a4de6db498f092abf5ab3a9f5eaccf0d5a","src/oneof.rs":"de5a694a56931308fc1a790678aaaf8b67d7c6b56c9f7b2fde36a14312863e05","src/oneof_full.rs":"b9d5d95db115b1ebf6e7c222373008d4f9f86e21347ddf50ef23f8cd11b8f777","src/owning_ref.rs":"1face1307d85ef98f5b9752eb45de47884c3ce68d31cec315ebfac6559ab501f","src/plugin.rs":"cfc80fa6541885906b8f21f6a7d2c7d0e83b3f1121093a24e2e55d59f6e1ec02","src/reflect/acc/mod.rs":"23500dd605f11f8def7d0f858a00cf1c85a7b95c293bc125ba0804a949b35162","src/reflect/acc/v2/map.rs":"070d17351d175227cc6b4bd580e1a0e12ea60b483bc67e666ac55526c81a56c2","src/reflect/acc/v2/mod.rs":"86639cfa45e3b2d08020c289001d87910fa972e9fb6a28a38880ccee51002a0c","src/reflect/acc/v2/repeated.rs":"dee457a69c0aae5a6c1cdc1a71300e586dbf7cb845eab5d6c4b64563513bb012","src/reflect/acc/v2/singular/mod.rs":"85bace3cf99fe0b05dce61bf19433077cf29506c6641b001935064fd37ab658f","src/reflect/acc/v2/singular/oneof.rs":"f70db73a0316185b8ae43b82cd29665d1140d920e7d28bb789a438eb06f9c62a","src/reflect/dynamic/map.rs":"da992d492e21e5824e3f96b366dc78b3f546b9de8f66f799f9af32ce74cc5f3f","src/reflect/dynamic/mod.rs":"3ee7a82dbd5410d10eee44fdf3ae8b5f198185d7ff4a608f10a668eba6af3a73","src/reflect/dynamic/optional.rs":"db923e3d343f869c2bf4f157559686251ff9744dfd0560ba1d1b1b46ae1b81fd","src/reflect/dynamic/repeated.rs":"61a7c698b59280564a1deb7200884875a8844120058c3d69ea4d6aa5f6c4266e","src/reflect/enums/generated.rs":"44e5dbe08a1a15067744580c87c6d09f66dc364f2791fc1ecab919e1dacdec09","src/reflect/enums/mod.rs":"aed1b29e4e42f34b26476a6013e64b7ec8876cfa53633583a751c344fd3ab34c","src/reflect/error.rs":"532a9c117606e8597a40d60b3efebc9371c4f746919cc611aaaddf105cbb3608","src/reflect/field/dynamic.rs":"8e81f7b6f684ed58287eb2de20f3abb8dabb062601715421d3d1e4c041101602","src/reflect/field/index.rs":"4aeef75560e52bf865718f9323fc5b2b2318a6e4bb66fadc57f4875999cf15b3","src/reflect/field/mod.rs":"067a91d59a464042c1c9d266382696b4aaf3960e898e4e2378ff065ce3f23de2","src/reflect/field/protobuf_field_type.rs":"6ec9ca95c25a9c9fe70fad51b1221676e9d3d5a6daac37d5633379471d8c4257","src/reflect/field/runtime_field_type.rs":"26166bb9d48caa0287dfe6235937e5bd647692ca75e8ee4855d0e198f9a79d73","src/reflect/file/building.rs":"53806efda5872c32f63f55582b767be8becff1d7bfb4ed0c11947c912ad55a75","src/reflect/file/dynamic.rs":"3e26271c31816dae043eb70c9990a6fc621c9b5241a555d968f731dfd4762489","src/reflect/file/fds.rs":"9a369eaea05a000710bf977cce28d3fad1463f8ffa42df35e4f5ac5de306f9e6","src/reflect/file/generated.rs":"88f3d88ddbcfa01812398ddc5c350c54cc42b15d99223a642574f55d4d6cdf69","src/reflect/file/index.rs":"3d53af11b39b164b488e3850c3a5be5ae4628c172b4475e4ae5b993225bdeae9","src/reflect/file/mod.rs":"b7aa1c4154677630b843c81d35c60f1374d00d44d3477e6e899e18cb7ae97db1","src/reflect/file/syntax.rs":"8d6d6c3a7bbf9217df3550410a9ba1eb9c08295aa410cc5d2e65efe1eec3ca3a","src/reflect/find_message_or_enum.rs":"e8b10159819cce4414da7681cb3ce0b4e62a45adf4e3e7933a3c1b4f8e97cfb8","src/reflect/map/empty.rs":"e8429213086d1f417e8e9785d6353cb6e751e7d76dcce1fcb32c302a7ee0d156","src/reflect/map/generated.rs":"0dd72936b32428cedb4f26250ba6d1c1814a1bb40fd6de423d997e50eb04e914","src/reflect/map/mod.rs":"fc444fd4924423c94dbb983d82baf7d9464d8f90cc51449ce104ed728e32dfd7","src/reflect/message/generated.rs":"c76f5e887534bc9648dd105718f79bb93465549d57b25c4a00957e603749721c","src/reflect/message/is_initialized_is_always_true.rs":"af716e9d0ce233fda9c7dee13814c24c188ea195cf907d81f74fb198ef2760ae","src/reflect/message/message_ref.rs":"80472f804a4dd3b91f6fec4451639ca356f2b33c502775e0fd6b2c3bfbe1be0a","src/reflect/message/mod.rs":"5ef7f5ecdc2de7c0789b8558711a976e2376fcaae67975a10d9f1bd4179703e5","src/reflect/mod.rs":"620cab65b696a13144ed54d589ca8c4176ecb8127b2ba2a294806f649c0fbd9f","src/reflect/name.rs":"0377dcf871ca5add5e168a3bff04d9f01fe5970db4dfb66272def6484dc7d54b","src/reflect/oneof/generated.rs":"c02b7cd7415f52366f6092559643869812db842bd1c383ce7d8759e519ab453a","src/reflect/oneof/mod.rs":"ce662622c10557f4f9bf9ddb04943136f8c74d16009d97496965262dbdf5e2ac","src/reflect/optional/mod.rs":"5dada97750209aeddf1506eea0a59d709aeb3e44bae5443214e0c2950c870952","src/reflect/protobuf_type_box.rs":"5ed50bdefa5eebe8bf0547cb37def38d814653ac7a0d401eb4f05b8a72ebf509","src/reflect/reflect_eq.rs":"1352d0be16ff7dc2089d499b3fbcf40d501406e8648649092aa2cb21f207aac0","src/reflect/repeated/drain_iter.rs":"0f065e5ef884ee90189594b8a92d814c40a4b3ff80ed659f2f8a0ac56795011d","src/reflect/repeated/iter.rs":"f7f7bf56347850f567612feab9542c4658f251ce74b7b8fb7ed6612cb85584f0","src/reflect/repeated/mod.rs":"6084482af4936340e1bfd43ff8d06351c3d0316f26cb9f8b73bd8c16f3e9df98","src/reflect/repeated/transmute.rs":"ecd5b5b2772670b030a6d96b47b54bf8500ec0996920ef0db7d5f4b6f338c493","src/reflect/repeated/vec_downcast.rs":"7f4c2997d313f45bc46a097fad7c579d663c642cba425a7851f590282d58309d","src/reflect/rt/mod.rs":"4f0266be9bd092a6ee49a1f3453ff08eabfcebb65473b6c8552a260ac7a4817b","src/reflect/rt/v2.rs":"d1d7419f5d9d7a80748ded5f67488a7855491416a8cba024ab66a48be0d4ea4c","src/reflect/runtime_type_box.rs":"6d8988ed25218f13da61db5dbbefa621df3fd7f1141669854c6ec9571b3eee6c","src/reflect/runtime_types.rs":"3ae8764ba089ad59a951b1bc14d85c0d37ef61a85572a478d9c1bc4464798fb1","src/reflect/service/index.rs":"4a41f90b6c8b3f5c8349075aec84fcbb90ab3028451d2ba40cb83257ff4d90c7","src/reflect/service/mod.rs":"1d0b5b3d9cd1968731971137ca320a91591ee9ca45828d3e4284da87397044f6","src/reflect/type_dynamic.rs":"37d8443a95616acd5f499bc473d74d5831a1e60cb349b8baf35860352b16f2c3","src/reflect/types.rs":"bdaf23d44bd2e214e3c85543febe16aef5da45d2608fef1dfa4ea6252cf62cb0","src/reflect/value/mod.rs":"56f7ff8c4541108fff20f83f7f12ef173ce398e642b482dc3a4cf92c9e1cea17","src/reflect/value/value_box.rs":"1037d01c52a4f0432e42a2c023f5c68ed458ed60b196597ca78f81b6207ecb83","src/reflect/value/value_ref.rs":"7a3490eb4918ee725ad59219b0fc5810b231eaf2ddf798ab75085b4acc145b2e","src/rt/map.rs":"c4bd4246181a43dc9cf1735ec5882955af595fba8ef839a06e0e1df399848520","src/rt/message.rs":"c9b9b3b8f25b6813b8ca2411f015ae80b2abba377d44f9f9b9c05cb45366229a","src/rt/mod.rs":"db610d871d8fb022ba4634199896534ecb3d6ad22c7e2cabbf4d7ad79e1c8c66","src/rt/packed.rs":"be2fae85812c39d815bcb0463e3ea67774770c25014b764b8712dd2b90d360c6","src/rt/repeated.rs":"213d08349efb21bc02fb5abd1d1c3f039ae1d4368f53f548cdf1999897c60f1c","src/rt/singular.rs":"2c982de7a686a8d0c430ce690297a524e892a70bca33d288c6e9b912d19e994c","src/rt/unknown_or_group.rs":"a0bf9af0bdb6ee4261bdc9d5136288e3d17f7de611b7f61943caf6d8eb38367d","src/rustproto.rs":"ea9f86c6d0356c75db76d50da06c29647c8d2895bb6dcf7e91eccc6535f6c770","src/special.rs":"25e6afb4edfbcfd103a287dcdd1233ccb08ee91efce9471e3d5d370f040973c2","src/text_format/mod.rs":"da0aeb839963afcba1923b68a06264185a927cef3f3075ca958c11fa1e780535","src/text_format/parse.rs":"c7be3464fa8f6624ed2001b450e999f93bea5f6118132b7f372110c7af5e5e71","src/text_format/print.rs":"55edf1f69cc0a66c538949d399e1ae015b8cf46c911863bd4d5b5dc520b56f91","src/timestamp.rs":"f0590e19fd7740bdc65a0dc6f9d73bf55559638515ca7849481022288a9bee43","src/unknown.rs":"fd6091ad04dadbde5793ea42af50fa51cf2e7737696029a9e0d1f001f0c1423d","src/varint/decode.rs":"5e9fdf9fb5fe82ddc223feaf5867c0a081bd67731635f88cb9a5b1faeeb79f82","src/varint/encode.rs":"43c1d67932aca6ea61a368f34233fff88d5d6253f5ebad842cbf69f26245e16d","src/varint/generic.rs":"98e31da80c278cff672ddc8231241cc789ad6de138fa6ca6c0483ff1783f4957","src/varint/mod.rs":"643b5b2443b4e103fc4eeac7844dcda4b9c6b2bab3cfe9fba00145ccea9a4505","src/well_known_types/any.rs":"296ea00846a7e6cce30d02cc2159ec8a147a85c80a73f10b0deada956b2d94e2","src/well_known_types/api.rs":"d67b5e61949514c1350e9041ea612e32360126869b5982b2bffa389cefa30c07","src/well_known_types/duration.rs":"f7f1f07408457647e8ad070fa9acae6c4ea8efa2681541d6e9a436a785add7b1","src/well_known_types/empty.rs":"aa772e9729f81e64c73f1c9481c757bd953d5068e030723b9cf494b227c8d24b","src/well_known_types/field_mask.rs":"e2ea9cb068a2a914d198b86e8511d011aa699d34dfe5f9c0a58f3fec202c5c7c","src/well_known_types/mod.rs":"b141483834c860b221d0946a584389ebcefc2c5f7692ce1f95869c9f83ff2c16","src/well_known_types/source_context.rs":"3429dd5468d0c1587c7b78369c722b8fe12dee7e2c1691bff94ab57a82ba13c2","src/well_known_types/struct_.rs":"56090799d326296b89bee1476550d480b264123997d3cb0c8d518a688818feb9","src/well_known_types/timestamp.rs":"446345055a17e34797b06ddc0830ba61ff62f750004bed2a4aae1ec8bea5f71e","src/well_known_types/type_.rs":"07418c82a4ae2683aa0c1f7abc3ac57a9523b0c62506bc075b9213f3c5c98397","src/well_known_types/wrappers.rs":"ac4dda7cde8b14a19d1fd4a22a857894f14f771a6c2383d50295f2e9a9d2c3fb","src/well_known_types_util/any.rs":"2b2e5cdf1d413bc13485bfc78c84d8403168d6b1a6dbc10d585bf10326120c81","src/well_known_types_util/duration.rs":"e0d9de89f8c7c4b2075f23c2a4451dfec4ae1f28c9784ea39a626a8c3aa9e005","src/well_known_types_util/mod.rs":"81fb1c0721602ffe91c4587f727457b59c8697863e3f853cd9569db5cee973e9","src/well_known_types_util/timestamp.rs":"f55906fef3190fa1786ed736ded16f3ac6de2095cb974af5a476c2a2f91260b3","src/wire_format.rs":"649bd310711e9464d8827eb16754ba8921dd6ebc209f78033fdee11dded8b689","src/zigzag.rs":"0dcbdf54d4bc8141fdc64d074e6f6f7633bbb66cc782cd4bd6d343ce0569c3de"},"package":"4ee4a7d8b91800c8f167a6268d1a1026607368e1adc84e98fe044aeb905302f7"}
diff --git a/vendor/protobuf/src/coded_input_stream/mod.rs b/vendor/protobuf/src/coded_input_stream/mod.rs
index a979df19c..dc8029c51 100644
--- a/vendor/protobuf/src/coded_input_stream/mod.rs
+++ b/vendor/protobuf/src/coded_input_stream/mod.rs
@@ -511,6 +511,13 @@ impl<'a> CodedInputStream<'a> {
     }
 
     fn skip_group(&mut self) -> crate::Result<()> {
+        self.incr_recursion()?;
+        let ret = self.skip_group_no_depth_check();
+        self.decr_recursion();
+        ret
+    }
+
+    fn skip_group_no_depth_check(&mut self) -> crate::Result<()> {
         while !self.eof()? {
             let wire_type = self.read_tag_unpack()?.1;
             if wire_type == WireType::EndGroup {
@@ -631,19 +638,16 @@ impl<'a> CodedInputStream<'a> {
     /// Read message, do not check if message is initialized
     pub fn merge_message<M: Message>(&mut self, message: &mut M) -> crate::Result<()> {
         self.incr_recursion()?;
-        struct DecrRecursion<'a, 'b>(&'a mut CodedInputStream<'b>);
-        impl<'a, 'b> Drop for DecrRecursion<'a, 'b> {
-            fn drop(&mut self) {
-                self.0.decr_recursion();
-            }
-        }
-
-        let mut decr = DecrRecursion(self);
+        let ret = self.merge_message_no_depth_check(message);
+        self.decr_recursion();
+        ret
+    }
 
-        let len = decr.0.read_raw_varint64()?;
-        let old_limit = decr.0.push_limit(len)?;
-        message.merge_from(&mut decr.0)?;
-        decr.0.pop_limit(old_limit);
+    fn merge_message_no_depth_check<M: Message>(&mut self, message: &mut M) -> crate::Result<()> {
+        let len = self.read_raw_varint64()?;
+        let old_limit = self.push_limit(len)?;
+        message.merge_from(self)?;
+        self.pop_limit(old_limit);
         Ok(())
     }
 
@@ -982,4 +986,47 @@ mod test {
         );
         assert_eq!("field 3", input.read_string().unwrap());
     }
+
+    #[test]
+    fn test_shallow_nested_unknown_groups() {
+        // Test skip_group() succeeds on a start group tag 50 times
+        // followed by end group tag 50 times. We should be able to
+        // successfully skip the outermost group.
+        let mut vec = Vec::new();
+        let mut os = CodedOutputStream::new(&mut vec);
+        for _ in 0..50 {
+            os.write_tag(1, WireType::StartGroup).unwrap();
+        }
+        for _ in 0..50 {
+            os.write_tag(1, WireType::EndGroup).unwrap();
+        }
+        drop(os);
+
+        let mut input = CodedInputStream::from_bytes(&vec);
+        assert!(input.skip_group().is_ok());
+    }
+
+    #[test]
+    fn test_deeply_nested_unknown_groups() {
+        // Create an output stream that has groups nested recursively 1000
+        // deep, and try to skip the group.
+        // This should fail the default depth limit of 100 which ensures we
+        // don't blow the stack on adversial input.
+        let mut vec = Vec::new();
+        let mut os = CodedOutputStream::new(&mut vec);
+        for _ in 0..1000 {
+            os.write_tag(1, WireType::StartGroup).unwrap();
+        }
+        for _ in 0..1000 {
+            os.write_tag(1, WireType::EndGroup).unwrap();
+        }
+        drop(os);
+
+        let mut input = CodedInputStream::from_bytes(&vec);
+        assert!(input
+            .skip_group()
+            .unwrap_err()
+            .to_string()
+            .contains("Over recursion limit"));
+    }
 }
-- 
2.45.2

