From c27a81c2aee58626189631800841af0cc44e0873 Mon Sep 17 00:00:00 2001
From: Kanishk-Bansal <kbkanishk975@gmail.com>
Date: Wed, 23 Apr 2025 06:43:41 +0000
Subject: [PATCH] Address CVE-2025-32434

Upstream Patch Reference : https://github.com/pytorch/pytorch/commit/8d4b8a920a2172523deb95bf20e8e52d50649c04

Signed-off-by: Kanishk-Bansal <kbkanishk975@gmail.com>
---
 test/test_serialization.py |  6 +++++-
 torch/serialization.py     | 17 ++++++++++++-----
 2 files changed, 17 insertions(+), 6 deletions(-)

diff --git a/test/test_serialization.py b/test/test_serialization.py
index 9b9a7133..593f802a 100644
--- a/test/test_serialization.py
+++ b/test/test_serialization.py
@@ -404,7 +404,11 @@ class SerializationMixin:
         b += [a[0].storage()]
         b += [a[0].reshape(-1)[1:4].clone().storage()]
         path = download_file('https://download.pytorch.org/test_data/legacy_serialized.pt')
-        c = torch.load(path, weights_only=weights_only)
+        if weights_only:
+                with self.assertRaisesRegex(RuntimeError,
+                                            "Cannot use ``weights_only=True`` with files saved in the legacy .tar format."):
+                    c = torch.load(path, weights_only=weights_only)
+        c = torch.load(path, weights_only=False)
         self.assertEqual(b, c, atol=0, rtol=0)
         self.assertTrue(isinstance(c[0], torch.FloatTensor))
         self.assertTrue(isinstance(c[1], torch.FloatTensor))
diff --git a/torch/serialization.py b/torch/serialization.py
index 83f6fa27..21ba1d07 100644
--- a/torch/serialization.py
+++ b/torch/serialization.py
@@ -33,6 +33,13 @@ STORAGE_KEY_SEPARATOR = ','
 FILE_LIKE: TypeAlias = Union[str, os.PathLike, BinaryIO, IO[bytes]]
 MAP_LOCATION: TypeAlias = Optional[Union[Callable[[torch.Tensor, str], torch.Tensor], torch.device, str, Dict[str, str]]]
 
+UNSAFE_MESSAGE = (
+     "In PyTorch 2.6, we changed the default value of the `weights_only` argument in `torch.load` "
+     "from `False` to `True`. Re-running `torch.load` with `weights_only` set to `False` will likely succeed, "
+     "but it can result in arbitrary code execution. Do it only if you got the file from a "
+     "trusted source."
+ )
+
 __all__ = [
     'SourceChangeWarning',
     'mkdtemp',
@@ -767,11 +774,6 @@ def load(
         >>> torch.load('module.pt', encoding='ascii')
     """
     torch._C._log_api_usage_once("torch.load")
-    UNSAFE_MESSAGE = (
-        "Weights only load failed. Re-running `torch.load` with `weights_only` set to `False`"
-        " will likely succeed, but it can result in arbitrary code execution."
-        "Do it only if you get the file from a trusted source. WeightsUnpickler error: "
-    )
     # Add ability to force safe only weight loads via environment variable
     if os.getenv("TORCH_FORCE_WEIGHTS_ONLY_LOAD", "0").lower() in ['1', 'y', 'yes', 'true']:
         weights_only = True
@@ -900,6 +902,11 @@ def _legacy_load(f, map_location, pickle_module, **pickle_load_args):
 
         with closing(tarfile.open(fileobj=f, mode='r:', format=tarfile.PAX_FORMAT)) as tar, \
                 mkdtemp() as tmpdir:
+            if pickle_module is _weights_only_unpickler:
+                raise RuntimeError(
+                    "Cannot use ``weights_only=True`` with files saved in the "
+                    "legacy .tar format. " + UNSAFE_MESSAGE
+                )
 
             tar.extract('storages', path=tmpdir)
             with open(os.path.join(tmpdir, 'storages'), 'rb', 0) as f:
-- 
2.45.2

