diff -ru oath-toolkit-2.6.9-orig/liboath/global.c oath-toolkit-2.6.9/liboath/global.c
--- oath-toolkit-2.6.9-orig/liboath/global.c	2023-11-06 08:52:01.544401132 -0800
+++ oath-toolkit-2.6.9/liboath/global.c	2023-11-06 08:57:08.612406143 -0800
@@ -25,9 +25,12 @@

 #include <stdio.h>		/* For snprintf, getline. */
 #include <string.h>		/* For strverscmp. */
+#include <stdlib.h>		/* For free. */

 #include "gc.h"

+char *oath_lockfile_path = NULL;
+
 /**
  * oath_init:
  *
@@ -52,6 +55,8 @@
   if (gc_init () != GC_OK)
     return OATH_CRYPTO_ERROR;

+  oath_lockfile_path = NULL;
+
   return OATH_OK;
 }

@@ -71,6 +76,11 @@
 {
   gc_done ();

+  if (oath_lockfile_path)
+  {
+    free(oath_lockfile_path);
+    oath_lockfile_path = NULL;
+  }
   return OATH_OK;
 }

@@ -99,3 +109,23 @@

   return NULL;
 }
+
+int
+oath_set_lockfile_path(const char *lockfile)
+{
+  int l;
+
+  if (oath_lockfile_path)
+  {
+    free(oath_lockfile_path);
+    oath_lockfile_path = NULL;
+  }
+
+  if (lockfile)
+  {
+    l = asprintf (&oath_lockfile_path, "%s", lockfile);
+    if (oath_lockfile_path == NULL || ((size_t) l) != strlen (lockfile))
+        return OATH_PRINTF_ERROR;
+  }
+  return OATH_OK;
+}
\ No newline at end of file
diff -ru oath-toolkit-2.6.9-orig/liboath/liboath.map oath-toolkit-2.6.9/liboath/liboath.map
--- oath-toolkit-2.6.9-orig/liboath/liboath.map	2023-11-06 08:52:01.544401132 -0800
+++ oath-toolkit-2.6.9/liboath/liboath.map	2023-11-06 08:58:25.864410203 -0800
@@ -75,6 +75,7 @@
   global:
     oath_totp_validate3;
     oath_totp_validate3_callback;
+    oath_set_lockfile_path;
 } LIBOATH_1.12.0;

 LIBOATH_2.6.0
diff -ru oath-toolkit-2.6.9-orig/liboath/oath.h oath-toolkit-2.6.9/liboath/oath.h
--- oath-toolkit-2.6.9-orig/liboath/oath.h	2023-11-06 08:52:01.544401132 -0800
+++ oath-toolkit-2.6.9/liboath/oath.h	2023-11-06 09:46:10.416744428 -0800
@@ -164,6 +164,9 @@

   extern OATHAPI const char *oath_check_version (const char *req_version);

+  extern char *oath_lockfile_path;
+  extern OATHAPI int oath_set_lockfile_path(const char *lockfile);
+
 /* Error handling */

   extern OATHAPI const char *oath_strerror (int err);
diff -ru oath-toolkit-2.6.9-orig/pam_oath/pam_oath.c oath-toolkit-2.6.9/pam_oath/pam_oath.c
--- oath-toolkit-2.6.9-orig/pam_oath/pam_oath.c	2023-11-06 08:52:01.576401132 -0800
+++ oath-toolkit-2.6.9/pam_oath/pam_oath.c	2023-11-06 09:14:42.848153201 -0800
@@ -73,6 +73,7 @@
   int try_first_pass;
   int use_first_pass;
   char *usersfile;
+  char *lockfile;
   unsigned digits;
   unsigned window;
 };
@@ -87,6 +88,7 @@
   cfg->try_first_pass = 0;
   cfg->use_first_pass = 0;
   cfg->usersfile = NULL;
+  cfg->lockfile = NULL;
   cfg->digits = -1;
   cfg->window = 5;

@@ -102,6 +104,8 @@
 	cfg->use_first_pass = 1;
       if (strncmp (argv[i], "usersfile=", 10) == 0)
 	cfg->usersfile = (char *) argv[i] + 10;
+      if (strncmp (argv[i], "lockfile=", 9) == 0)
+	cfg->lockfile = (char *) argv[i] + 9;
       if (strncmp (argv[i], "digits=", 7) == 0)
 	cfg->digits = atoi (argv[i] + 7);
       if (strncmp (argv[i], "window=", 7) == 0)
@@ -127,6 +131,7 @@
       D (("try_first_pass=%d", cfg->try_first_pass));
       D (("use_first_pass=%d", cfg->use_first_pass));
       D (("usersfile=%s", cfg->usersfile ? cfg->usersfile : "(null)"));
+      D (("lockfile=%s", cfg->lockfile ? cfg->lockfile : "(null)"));
       D (("digits=%d", cfg->digits));
       D (("window=%d", cfg->window));
     }
@@ -336,6 +341,17 @@
       retval = PAM_AUTHINFO_UNAVAIL;
       goto done;
     }
+
+  if (cfg.lockfile)
+    rc = oath_set_lockfile_path(cfg.lockfile);
+  else
+    rc = oath_set_lockfile_path("/var/lock/pam_oath.lock");
+  if (rc != OATH_OK)
+    {
+      DBG (("oath_set_lockfile_path() failed (%d)", rc));
+      retval = PAM_AUTHINFO_UNAVAIL;
+      goto done;
+    }

   if (password == NULL)
     {
