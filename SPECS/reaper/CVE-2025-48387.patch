From 14f532dae3732b4bdba2821d31d6bce663cf8dd5 Mon Sep 17 00:00:00 2001
From: jykanase <v-jykanase@microsoft.com>
Date: Tue, 10 Jun 2025 07:51:46 +0000
Subject: [PATCH] CVE-2025-48387

Upstream Patch Reference: https://github.com/mafintosh/tar-fs/commit/647447b572bc135c41035e82ca7b894f02b17f0f
---
 .../bower/lib/node_modules/tar-fs/index.js    | 39 +++++++++++--------
 1 file changed, 22 insertions(+), 17 deletions(-)

diff --git a/tmp_local/lib/node_modules/bower/lib/node_modules/tar-fs/index.js b/tmp_local/lib/node_modules/bower/lib/node_modules/tar-fs/index.js
index 3fd93bc..7659b01 100644
--- a/tmp_local/lib/node_modules/bower/lib/node_modules/tar-fs/index.js
+++ b/tmp_local/lib/node_modules/bower/lib/node_modules/tar-fs/index.js
@@ -266,16 +266,20 @@ exports.extract = function (cwd, opts) {
     var onlink = function () {
       if (win32) return next() // skip links on win for now before it can be tested
       xfs.unlink(name, function () {
-        var dst = path.join(cwd, path.join('/', header.linkname))
+        var link = path.join(cwd, path.join('/', header.linkname))
 
-        xfs.link(dst, name, function (err) {
-          if (err && err.code === 'EPERM' && opts.hardlinkAsFilesFallback) {
-            stream = xfs.createReadStream(dst)
-            return onfile()
-          }
+      fs.realpath(link, function (err, dst) {
+          if (err || !inCwd(dst)) return next(new Error(name + ' is not a valid hardlink'))
 
-          stat(err)
-        })
+          xfs.link(dst, name, function (err) {
+            if (err && err.code === 'EPERM' && opts.hardlinkAsFilesFallback) {
+              stream = xfs.createReadStream(dst)
+              return onfile()
+            }
+
+            stat(err)
+          })
+	})
       })
     }
 
@@ -297,19 +301,19 @@ exports.extract = function (cwd, opts) {
       })
     }
 
-    if (header.type === 'directory') {
-      stack.push([name, header.mtime])
-      return mkdirfix(name, {
-        fs: xfs, own: own, uid: header.uid, gid: header.gid
-      }, stat)
-    }
-
-    var dir = path.dirname(name)
+    var dir = path.join(name, '.') === path.join(cwd, '.') ? cwd : path.dirname(name)
 
     validate(xfs, dir, path.join(cwd, '.'), function (err, valid) {
       if (err) return next(err)
       if (!valid) return next(new Error(dir + ' is not a valid path'))
 
+      if (header.type === 'directory') {
+        stack.push([name, header.mtime])
+        return mkdirfix(name, {
+          fs: xfs, own: own, uid: header.uid, gid: header.gid
+        }, stat)
+      }
+
       mkdirfix(dir, {
         fs: xfs, own: own, uid: header.uid, gid: header.gid
       }, function (err) {
@@ -336,8 +340,9 @@ exports.extract = function (cwd, opts) {
 
 function validate (fs, name, root, cb) {
   if (name === root) return cb(null, true)
+
   fs.lstat(name, function (err, st) {
-    if (err && err.code !== 'ENOENT') return cb(err)
+    if (err && err.code !== 'ENOENT' && err.code !== 'EPERM') return cb(err)
     if (err || st.isDirectory()) return validate(fs, path.join(name, '..'), root, cb)
     cb(null, false)
   })
-- 
2.45.2

