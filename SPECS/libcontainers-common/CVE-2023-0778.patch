From 465c1fb078da1a341845ab67c25a81b56795ac51 Mon Sep 17 00:00:00 2001
From: Kanishk-Bansal <kbkanishk975@gmail.com>
Date: Mon, 27 Jan 2025 13:00:47 +0000
Subject: [PATCH] Address CVE-2023-0778

---
 libpod/container_internal.go |  4 ++--
 utils/utils.go               | 32 ++++++++++++++++++++++++++++++++
 2 files changed, 34 insertions(+), 2 deletions(-)

diff --git a/libpod/container_internal.go b/libpod/container_internal.go
index 8ffcccf..42cb682 100644
--- a/libpod/container_internal.go
+++ b/libpod/container_internal.go
@@ -26,7 +26,7 @@ import (
 	"github.com/containers/podman/v3/pkg/selinux"
 	"github.com/containers/podman/v3/pkg/util"
 	"github.com/containers/storage"
-	"github.com/containers/storage/pkg/archive"
+	"github.com/containers/storage/pkg/chrootarchive"
 	"github.com/containers/storage/pkg/idtools"
 	"github.com/containers/storage/pkg/mount"
 	"github.com/coreos/go-systemd/v22/daemon"
@@ -757,7 +757,7 @@ func (c *Container) export(path string) error {
 		}()
 	}
 
-	input, err := archive.Tar(mountPoint, archive.Uncompressed)
+	input, err := chrootarchive.Tar(mountPoint, nil, mountPoint)
 	if err != nil {
 		return errors.Wrapf(err, "error reading container directory %q", c.ID())
 	}
diff --git a/utils/utils.go b/utils/utils.go
index a2268a3..f502242 100644
--- a/utils/utils.go
+++ b/utils/utils.go
@@ -11,6 +11,7 @@ import (
 
 	"github.com/containers/podman/v3/libpod/define"
 	"github.com/containers/storage/pkg/archive"
+	"github.com/containers/storage/pkg/chrootarchive"
 	"github.com/pkg/errors"
 	"github.com/sirupsen/logrus"
 )
@@ -107,6 +108,16 @@ func UntarToFileSystem(dest string, tarball *os.File, options *archive.TarOption
 	return archive.Untar(tarball, dest, options)
 }
 
+// Creates a new tar file and wrties bytes from io.ReadCloser
+func CreateTarFromSrc(source string, dest string) error {
+	file, err := os.Create(dest)
+	if err != nil {
+		return fmt.Errorf("could not create tarball file '%s': %w", dest, err)
+	}
+	defer file.Close()
+	return TarChrootToFilesystem(source, file)
+}
+
 // TarToFilesystem creates a tarball from source and writes to an os.file
 // provided
 func TarToFilesystem(source string, tarball *os.File) error {
@@ -128,6 +139,27 @@ func Tar(source string) (io.ReadCloser, error) {
 	return archive.Tar(source, archive.Uncompressed)
 }
 
+// TarChrootToFilesystem creates a tarball from source and writes to an os.file
+// provided while chrooted to the source.
+func TarChrootToFilesystem(source string, tarball *os.File) error {
+	tb, err := TarWithChroot(source)
+	if err != nil {
+		return err
+	}
+	_, err = io.Copy(tarball, tb)
+	if err != nil {
+		return err
+	}
+	logrus.Debugf("wrote tarball file %s", tarball.Name())
+	return nil
+}
+// TarWithChroot creates a tarball from source and returns a readcloser of it
+// while chrooted to the source.
+func TarWithChroot(source string) (io.ReadCloser, error) {
+	logrus.Debugf("creating tarball of %s", source)
+	return chrootarchive.Tar(source, nil, source)
+}
+
 // RemoveScientificNotationFromFloat returns a float without any
 // scientific notation if the number has any.
 // golang does not handle conversion of float64s that have scientific
-- 
2.45.2

