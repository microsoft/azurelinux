From 314fdb876cae7b8b57932adbdab40cb8a9148cfc Mon Sep 17 00:00:00 2001
From: AllSpark <allspark@microsoft.com>
Date: Sat, 13 Sep 2025 06:29:24 +0000
Subject: [PATCH] ws: get a new mask for each new outgoing frame

- Move mask generation from accept to frame send: generate a fresh 4-byte
  random mask for every outgoing frame in ws_enc_write_head.
- Allow forcing zero mask in DEBUGBUILD via CURL_WS_FORCE_ZERO_MASK env.
- Remove mask generation and printing from Curl_ws_accept and update log
  message to not leak mask bytes.

Reported-by: Calvin Ruocco
Closes: #18496
Signed-off-by: Azure Linux Security Servicing Account <azurelinux-security@microsoft.com>
Upstream-reference: AI Backport of https://github.com/curl/curl/commit/84db7a9eae8468c0445b15aa806fa.patch
---
 Utilities/cmcurl/lib/ws.c | 24 ++++++++++++++++--------
 1 file changed, 16 insertions(+), 8 deletions(-)

diff --git a/Utilities/cmcurl/lib/ws.c b/Utilities/cmcurl/lib/ws.c
index 6ccf9e65..476b7ad9 100644
--- a/Utilities/cmcurl/lib/ws.c
+++ b/Utilities/cmcurl/lib/ws.c
@@ -544,6 +544,7 @@ static ssize_t ws_enc_write_head(struct Curl_easy *data,
   unsigned char head[14];
   size_t hlen;
   ssize_t n;
+  CURLcode result;
 
   if(payload_len < 0) {
     failf(data, "WS: starting new frame with negative payload length %"
@@ -615,6 +616,20 @@ static ssize_t ws_enc_write_head(struct Curl_easy *data,
   enc->payload_remain = enc->payload_len = payload_len;
   ws_enc_info(enc, data, "sending");
 
+  /* 4 bytes random */
+
+  result = Curl_rand(data, (unsigned char *)&enc->mask, sizeof(enc->mask));
+  if(result) {
+    *err = result;
+    return -1;
+  }
+
+#ifdef DEBUGBUILD
+  if(getenv("CURL_WS_FORCE_ZERO_MASK"))
+    /* force the bit mask to 0x00000000, effectively disabling masking */
+    memset(&enc->mask, 0, sizeof(enc->mask));
+#endif
+
   /* add 4 bytes mask */
   memcpy(&head[hlen], &enc->mask, 4);
   hlen += 4;
@@ -805,14 +820,7 @@ CURLcode Curl_ws_accept(struct Curl_easy *data,
      subprotocol not requested by the client), the client MUST Fail
      the WebSocket Connection. */
 
-  /* 4 bytes random */
-
-  result = Curl_rand(data, (unsigned char *)&ws->enc.mask,
-                     sizeof(ws->enc.mask));
-  if(result)
-    return result;
-  infof(data, "Received 101, switch to WebSocket; mask %02x%02x%02x%02x",
-        ws->enc.mask[0], ws->enc.mask[1], ws->enc.mask[2], ws->enc.mask[3]);
+  infof(data, "[WS] Received 101, switch to WebSocket");
 
   /* Install our client writer that decodes WS frames payload */
   result = Curl_cwriter_create(&ws_dec_writer, data, &ws_cw_decode,
-- 
2.45.4

