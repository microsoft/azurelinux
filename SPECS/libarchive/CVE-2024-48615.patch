From 8d57799b49ab165210d34bdc201971e15c013288 Mon Sep 17 00:00:00 2001
From: kavyasree <kkaitepalli@microsoft.com>
Date: Mon, 7 Apr 2025 12:04:21 +0530
Subject: [PATCH] Error handling for each call of __archive_read_ahead

Reference: https://github.com/libarchive/libarchive/commit/565b5aea491671ae33df1ca63697c10d54c00165
---
 libarchive/archive_read_support_format_tar.c | 17 +++++++----------
 1 file changed, 7 insertions(+), 10 deletions(-)

diff --git a/libarchive/archive_read_support_format_tar.c b/libarchive/archive_read_support_format_tar.c
index bfdad7f..e654de7 100644
--- a/libarchive/archive_read_support_format_tar.c
+++ b/libarchive/archive_read_support_format_tar.c
@@ -625,8 +625,6 @@ archive_read_format_tar_read_data(struct archive_read *a,
 		}
 
 		*buff = __archive_read_ahead(a, 1, &bytes_read);
-		if (bytes_read < 0)
-			return (ARCHIVE_FATAL);
 		if (*buff == NULL) {
 			archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
 			    "Truncated tar archive");
@@ -711,13 +709,11 @@ tar_read_header(struct archive_read *a, struct tar *tar,
 
 		/* Read 512-byte header record */
 		h = __archive_read_ahead(a, 512, &bytes);
-		if (bytes < 0)
-			return ((int)bytes);
 		if (bytes == 0) { /* EOF at a block boundary. */
 			/* Some writers do omit the block of nulls. <sigh> */
 			return (ARCHIVE_EOF);
 		}
-		if (bytes < 512) {  /* Short block at EOF; this is bad. */
+		if (h == NULL) {  /* Short block at EOF; this is bad. */
 			archive_set_error(&a->archive,
 			    ARCHIVE_ERRNO_FILE_FORMAT,
 			    "Truncated tar archive");
@@ -1459,6 +1455,9 @@ read_mac_metadata_blob(struct archive_read *a, struct tar *tar,
 	 */
 	data = __archive_read_ahead(a, msize, NULL);
 	if (data == NULL) {
+		archive_set_error(&a->archive, EINVAL,
+ 		    "Truncated archive"
+ 		    " detected while reading macOS metadata");
 		*unconsumed = 0;
 		return (ARCHIVE_FATAL);
 	}
@@ -2345,9 +2344,7 @@ gnu_sparse_old_read(struct archive_read *a, struct tar *tar,
 	do {
 		tar_flush_unconsumed(a, unconsumed);
 		data = __archive_read_ahead(a, 512, &bytes_read);
-		if (bytes_read < 0)
-			return (ARCHIVE_FATAL);
-		if (bytes_read < 512) {
+		if (data == NULL) {
 			archive_set_error(&a->archive, ARCHIVE_ERRNO_FILE_FORMAT,
 			    "Truncated tar archive "
 			    "detected while reading sparse file data");
@@ -2755,7 +2752,7 @@ readline(struct archive_read *a, struct tar *tar, const char **start,
 	tar_flush_unconsumed(a, unconsumed);
 
 	t = __archive_read_ahead(a, 1, &bytes_read);
-	if (bytes_read <= 0)
+	if (bytes_read <= 0 || t == NULL)
 		return (ARCHIVE_FATAL);
 	s = t;  /* Start of line? */
 	p = memchr(t, '\n', bytes_read);
@@ -2796,7 +2793,7 @@ readline(struct archive_read *a, struct tar *tar, const char **start,
 		}
 		/* Read some more. */
 		t = __archive_read_ahead(a, 1, &bytes_read);
-		if (bytes_read <= 0)
+		if (bytes_read <= 0 || t == NULL)
 			return (ARCHIVE_FATAL);
 		s = t;  /* Start of line? */
 		p = memchr(t, '\n', bytes_read);
-- 
2.34.1

