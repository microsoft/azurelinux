From 9ffbb563891dc0826707dcf9124023b1d9372967 Mon Sep 17 00:00:00 2001
From: Ankita Pareek <ankitapareek@microsoft.com>
Date: Fri, 11 Apr 2025 14:34:28 +0530
Subject: [PATCH] python3: Address CVE-2024-3651

Upstream patch reference: https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7

Signed-off-by: Ankita Pareek <ankitapareek@microsoft.com>
---
 _vendor/idna/core.py | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/pip/_vendor/idna/core.py b/pip/_vendor/idna/core.py
index 4f30037..aea17ac 100644
--- a/pip/_vendor/idna/core.py
+++ b/pip/_vendor/idna/core.py
@@ -150,9 +150,11 @@ def valid_contextj(label: str, pos: int) -> bool:
             joining_type = idnadata.joining_types.get(ord(label[i]))
             if joining_type == ord('T'):
                 continue
-            if joining_type in [ord('L'), ord('D')]:
+            elif joining_type in [ord('L'), ord('D')]:
                 ok = True
                 break
+            else:
+                break
 
         if not ok:
             return False
@@ -162,9 +164,11 @@ def valid_contextj(label: str, pos: int) -> bool:
             joining_type = idnadata.joining_types.get(ord(label[i]))
             if joining_type == ord('T'):
                 continue
-            if joining_type in [ord('R'), ord('D')]:
+            elif joining_type in [ord('R'), ord('D')]:
                 ok = True
                 break
+            else:
+                break
         return ok
 
     if cp_value == 0x200d:
@@ -236,12 +240,8 @@ def check_label(label: Union[str, bytes, bytearray]) -> None:
         if intranges_contain(cp_value, idnadata.codepoint_classes['PVALID']):
             continue
         elif intranges_contain(cp_value, idnadata.codepoint_classes['CONTEXTJ']):
-            try:
-                if not valid_contextj(label, pos):
-                    raise InvalidCodepointContext('Joiner {} not allowed at position {} in {}'.format(
-                        _unot(cp_value), pos+1, repr(label)))
-            except ValueError:
-                raise IDNAError('Unknown codepoint adjacent to joiner {} at position {} in {}'.format(
+            if not valid_contextj(label, pos):
+                raise InvalidCodepointContext('Joiner {} not allowed at position {} in {}'.format(
                     _unot(cp_value), pos+1, repr(label)))
         elif intranges_contain(cp_value, idnadata.codepoint_classes['CONTEXTO']):
             if not valid_contexto(label, pos):
-- 
2.34.1

