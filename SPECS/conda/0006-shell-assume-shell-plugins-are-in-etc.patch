diff --git a/conda/activate.py b/conda/activate.py
index e7944a2..318cf88 100644
--- a/conda/activate.py
+++ b/conda/activate.py
@@ -924,13 +924,7 @@ class PosixActivator(_Activator):
     set_var_tmpl = "%s='%s'"
     run_script_tmpl = '. "%s"'
 
-    hook_source_path = Path(
-        CONDA_PACKAGE_ROOT,
-        "shell",
-        "etc",
-        "profile.d",
-        "conda.sh",
-    )
+    hook_source_path = Path("/etc/profile.d/conda.sh")
 
     def _update_prompt(self, set_vars, conda_prompt_modifier):
         ps1 = self.environ.get("PS1", "")
@@ -977,13 +971,7 @@ class CshActivator(_Activator):
     set_var_tmpl = "set %s='%s'"
     run_script_tmpl = 'source "%s"'
 
-    hook_source_path = Path(
-        CONDA_PACKAGE_ROOT,
-        "shell",
-        "etc",
-        "profile.d",
-        "conda.csh",
-    )
+    hook_source_path = Path("/etc/profile.d/conda.csh")
 
     def _update_prompt(self, set_vars, conda_prompt_modifier):
         prompt = self.environ.get("prompt", "")
@@ -1039,7 +1027,7 @@ class XonshActivator(_Activator):
         else 'source-bash --suppress-skip-message -n "%s"'
     )
 
-    hook_source_path = Path(CONDA_PACKAGE_ROOT, "shell", "conda.xsh")
+    hook_source_path = Path("/etc/profile.d/conda.xsh")
 
     def _hook_preamble(self) -> str:
         return '$CONDA_EXE = "%s"' % self.path_conversion(context.conda_exe)
@@ -1080,14 +1068,7 @@ class FishActivator(_Activator):
     set_var_tmpl = 'set -g %s "%s"'
     run_script_tmpl = 'source "%s"'
 
-    hook_source_path = Path(
-        CONDA_PACKAGE_ROOT,
-        "shell",
-        "etc",
-        "fish",
-        "conf.d",
-        "conda.fish",
-    )
+    hook_source_path = Path("/etc/fish/conf.d/conda.fish")
 
     def _hook_preamble(self) -> str:
         if on_win:
diff --git a/conda/base/context.py b/conda/base/context.py
index 52c789c..4bed062 100644
--- a/conda/base/context.py
+++ b/conda/base/context.py
@@ -756,7 +756,7 @@ class Context(Configuration):
     def av_data_dir(self):
         """Where critical artifact verification data (e.g., various public keys) can be found."""
         # TODO (AV): Find ways to make this user configurable?
-        return join(self.conda_prefix, "etc", "conda")
+        return '/etc/conda'
 
     @property
     def signing_metadata_url_base(self):
