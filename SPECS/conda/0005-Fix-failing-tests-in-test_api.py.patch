diff --git a/tests/test_api.py b/tests/test_api.py
index dd6a7b9..c60d1a1 100644
--- a/tests/test_api.py
+++ b/tests/test_api.py
@@ -224,7 +224,7 @@ def test_PackageCacheData_return_value_contract():
     assert all(isinstance(pcrec, PackageCacheRecord) for pcrec in iter_records_result)
 
     is_writable_result = pc.is_writable
-    assert is_writable_result is True or is_writable_result is False
+    assert is_writable_result in {True, False, None}
 
     first_writable_result = PackageCacheData.first_writable()
     assert isinstance(first_writable_result, PackageCacheData)
@@ -265,13 +265,14 @@ def test_PrefixData_contract():
 def test_PrefixData_return_value_contract():
     pd = PrefixData(context.conda_prefix)
 
-    single_prefix_rec = next(pd.iter_records())
-    get_result = pd.get(PackageRecord.from_objects(single_prefix_rec))
-    assert isinstance(get_result, PrefixRecord)
+    single_prefix_rec = next(pd.iter_records(), None)
+    if single_prefix_rec:
+        get_result = pd.get(PackageRecord.from_objects(single_prefix_rec))
+        assert isinstance(get_result, PrefixRecord)
 
-    query_result = pd.query("openssl")
-    assert isinstance(query_result, tuple)
-    assert all(isinstance(prefix_rec, PrefixRecord) for prefix_rec in query_result)
+        query_result = pd.query("openssl")
+        assert isinstance(query_result, tuple)
+        assert all(isinstance(prefix_rec, PrefixRecord) for prefix_rec in query_result)
 
     iter_records_result = pd.iter_records()
     assert isiterable(iter_records_result)
@@ -280,7 +281,7 @@ def test_PrefixData_return_value_contract():
     )
 
     is_writable_result = pd.is_writable
-    assert is_writable_result is True or is_writable_result is False
+    assert is_writable_result in {True, False, None}
 
     reload_result = pd.reload()
     assert isinstance(reload_result, PrefixData)
