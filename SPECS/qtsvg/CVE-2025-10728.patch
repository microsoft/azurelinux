From ffbbdb51f8591659eab9c3a09e564dfece0c86f1 Mon Sep 17 00:00:00 2001
From: AllSpark <allspark@microsoft.com>
Date: Tue, 7 Oct 2025 06:31:03 +0000
Subject: [PATCH] Replace check for endless recursion when loading

Speed up loading by replacing check for cyclic elements and avoid stack overflow.

Partially reverts commit 0332df304f013ded362537c1f61556098b875352 by relying on a post-parse cycle detection rather than per-node check in parse().

Note: QSvgPattern recursion guard from upstream patch is not applicable in this code base due to absence of QSvgPattern; early-cycle detect removal is effectively already present. Added a comment documenting the approach in QSvgHandler::parse().

Fixes: QTBUG-137553
Signed-off-by: Azure Linux Security Servicing Account <azurelinux-security@microsoft.com>
Upstream-reference: AI Backport of https://github.com/qt/qtsvg/commit/6a6273126770006232e805cf1631f93d4919b788.patch
---
 src/svg/qsvghandler.cpp | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/svg/qsvghandler.cpp b/src/svg/qsvghandler.cpp
index e6c07d7..1909f91 100644
--- a/src/svg/qsvghandler.cpp
+++ b/src/svg/qsvghandler.cpp
@@ -3663,6 +3663,8 @@ void QSvgHandler::parse()
             // namespaceUri is empty. The only possible strategy at
             // this point is to do what everyone else seems to do and
             // ignore the reported namespaceUri completely.
+            // Note: Early cycle detection was removed in favor of a post-parse linear check.
+            // See QTBUG-137553. Cycle detection now happens after building the document tree.
             if (remainingUnfinishedElements
                     && startElement(xml->name().toString(), xml->attributes())) {
                 --remainingUnfinishedElements;
-- 
2.45.4

