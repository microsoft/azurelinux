From 04cc3ae380766dd5c453e06728dba3c587c60932 Mon Sep 17 00:00:00 2001
From: Thierry Treyer <ttreyer@meta.com>
Date: Fri, 11 Apr 2025 09:04:29 -0700
Subject: [PATCH] Remove 'cstring_view'

The `cstring_view` class was a `std::string_view` with the added
guarantee that it is NULL-terminated. It was only used by BpfMap.
This commit replaces it by a `std::string`

Fixes: #4001

Signed-off-by: Thierry Treyer <ttreyer@meta.com>
---
 src/bpfmap.cpp               |  2 +-
 src/bpfmap.h                 | 10 ++++-----
 src/container/cstring_view.h | 39 ------------------------------------
 tests/CMakeLists.txt         |  2 +-
 4 files changed, 6 insertions(+), 47 deletions(-)
 delete mode 100644 src/container/cstring_view.h

diff --git a/src/bpfmap.cpp b/src/bpfmap.cpp
index 9464e8ed..eb65621e 100644
--- a/src/bpfmap.cpp
+++ b/src/bpfmap.cpp
@@ -12,7 +12,7 @@ libbpf::bpf_map_type BpfMap::type() const
   return type_;
 }
 
-cstring_view BpfMap::bpf_name() const
+const std::string &BpfMap::bpf_name() const
 {
   return name_;
 }
diff --git a/src/bpfmap.h b/src/bpfmap.h
index 09153764..d48763ed 100644
--- a/src/bpfmap.h
+++ b/src/bpfmap.h
@@ -11,8 +11,6 @@ namespace libbpf {
 #include "libbpf/bpf.h"
 } // namespace libbpf
 
-#include "container/cstring_view.h"
-
 namespace bpftrace {
 
 class BpfMap {
@@ -28,12 +26,12 @@ public:
   }
 
   BpfMap(libbpf::bpf_map_type type,
-         cstring_view name,
+         std::string name,
          uint32_t key_size,
          uint32_t value_size,
          uint32_t max_entries)
       : type_(type),
-        name_(name),
+        name_(std::move(name)),
         key_size_(key_size),
         value_size_(value_size),
         max_entries_(max_entries)
@@ -42,7 +40,7 @@ public:
 
   int fd() const;
   libbpf::bpf_map_type type() const;
-  cstring_view bpf_name() const;
+  const std::string &bpf_name() const;
   std::string name() const;
   uint32_t key_size() const;
   uint32_t value_size() const;
@@ -56,7 +54,7 @@ public:
 private:
   struct bpf_map *bpf_map_;
   libbpf::bpf_map_type type_;
-  cstring_view name_;
+  std::string name_;
   uint32_t key_size_;
   uint32_t value_size_;
   uint32_t max_entries_;
diff --git a/src/container/cstring_view.h b/src/container/cstring_view.h
deleted file mode 100644
index 2e1c4602..00000000
--- a/src/container/cstring_view.h
+++ /dev/null
@@ -1,39 +0,0 @@
-#pragma once
-
-#include <string>
-#include <string_view>
-
-namespace bpftrace {
-
-// cstring_view
-//
-// A restricted version of std::string_view which guarantees that the underlying
-// string buffer will be null-terminated. This can be useful when interacting
-// with C APIs while avoiding the use of char* and unnecessary copies from using
-// std::string.
-//
-// We only allow constructing cstring_view from types which are guaranteed to
-// store null-terminated strings. All modifiers or operations on cstring_view
-// will also maintain the null-terminated property.
-class cstring_view : public std::string_view {
-public:
-  constexpr cstring_view(const char *str) noexcept : std::string_view{ str }
-  {
-  }
-  constexpr cstring_view(const std::string &str) noexcept
-      : std::string_view{ str }
-  {
-  }
-  constexpr const char *c_str() const noexcept
-  {
-    return data();
-  }
-
-private:
-  // Disallow use of functions which can break the null-termination invariant
-  using std::string_view::copy;
-  using std::string_view::remove_suffix;
-  using std::string_view::substr;
-};
-
-} // namespace bpftrace
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index c5d10f9c..26fbeb89 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -33,7 +33,7 @@ add_executable(bpftrace_test
   clang_parser.cpp
   config.cpp
   collect_nodes.cpp
-  cstring_view.cpp
+  deprecated.cpp
   field_analyser.cpp
   function_registry.cpp
   log.cpp
-- 
2.45.4

