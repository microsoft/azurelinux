From 4964d9bbcb571363c22f4d5c5141428094ff77f2 Mon Sep 17 00:00:00 2001
From: Patch Pilot <patch.pilot@microsoft.com>
Date: Thu, 14 Aug 2025 07:38:42 +0000
Subject: [PATCH] database/sql: avoid closing Rows while scan is in progress;
 invalidate driver-owned memory in fakedb; simplify convertAssignRows cursor
 handling

Signed-off-by: Azure Linux Security Servicing Account <azurelinux-security@microsoft.com>
Upstream-reference: https://github.com/golang/go/commit/8a924caaf348fdc366bab906424616b2974ad4e9.patch
---
 lib/time/update.bash                        |   0
 misc/arm/a                                  |   0
 misc/cgo/fortran/test.bash                  |   0
 misc/ios/clangwrap.sh                       |   0
 misc/wasm/go_js_wasm_exec                   |   0
 src/all.bash                                |   0
 src/all.rc                                  |   0
 src/bootstrap.bash                          |   0
 src/buildall.bash                           |   0
 src/clean.bash                              |   0
 src/clean.rc                                |   0
 src/cmd/compile/internal/ssa/gen/cover.bash |   0
 src/cmd/go/mkalldocs.sh                     |   0
 src/cmd/go/testdata/failssh/ssh             |   0
 src/database/sql/convert.go                 |   2 --
 src/database/sql/fakedb_test.go             |  38 +++++++++++---------
 src/database/sql/sql.go                     |  10 +++---
 src/debug/dwarf/testdata/ranges.elf         | Bin
 src/debug/dwarf/testdata/rnglistx.elf       | Bin
 src/debug/dwarf/testdata/typedef.elf        | Bin
 src/internal/trace/mkcanned.bash            |   0
 src/make.bash                               |   0
 src/make.rc                                 |   0
 src/net/http/cgi/testdata/test.cgi          |   0
 src/race.bash                               |   0
 src/regexp/syntax/make_perl_groups.pl       |   0
 src/run.bash                                |   0
 src/run.rc                                  |   0
 src/runtime/pprof/testdata/test32           | Bin
 src/runtime/pprof/testdata/test32be         | Bin
 src/runtime/pprof/testdata/test64           | Bin
 src/runtime/pprof/testdata/test64be         | Bin
 src/syscall/mkall.sh                        |   0
 src/syscall/mkerrors.sh                     |   0
 src/syscall/mksyscall.pl                    |   0
 src/syscall/mksyscall_libc.pl               |   0
 src/syscall/mksysctl_openbsd.pl             |   0
 src/syscall/mksysnum_dragonfly.pl           |   0
 src/syscall/mksysnum_freebsd.pl             |   0
 src/syscall/mksysnum_linux.pl               |   0
 src/syscall/mksysnum_netbsd.pl              |   0
 src/syscall/mksysnum_openbsd.pl             |   0
 src/syscall/mksysnum_plan9.sh               |   0
 43 files changed, 27 insertions(+), 23 deletions(-)
 mode change 100755 => 100644 lib/time/update.bash
 mode change 100755 => 100644 misc/arm/a
 mode change 100755 => 100644 misc/cgo/fortran/test.bash
 mode change 100755 => 100644 misc/ios/clangwrap.sh
 mode change 100755 => 100644 misc/wasm/go_js_wasm_exec
 mode change 100755 => 100644 src/all.bash
 mode change 100755 => 100644 src/all.rc
 mode change 100755 => 100644 src/bootstrap.bash
 mode change 100755 => 100644 src/buildall.bash
 mode change 100755 => 100644 src/clean.bash
 mode change 100755 => 100644 src/clean.rc
 mode change 100755 => 100644 src/cmd/compile/internal/ssa/gen/cover.bash
 mode change 100755 => 100644 src/cmd/go/mkalldocs.sh
 mode change 100755 => 100644 src/cmd/go/testdata/failssh/ssh
 mode change 100755 => 100644 src/debug/dwarf/testdata/ranges.elf
 mode change 100755 => 100644 src/debug/dwarf/testdata/rnglistx.elf
 mode change 100755 => 100644 src/debug/dwarf/testdata/typedef.elf
 mode change 100755 => 100644 src/internal/trace/mkcanned.bash
 mode change 100755 => 100644 src/make.bash
 mode change 100755 => 100644 src/make.rc
 mode change 100755 => 100644 src/net/http/cgi/testdata/test.cgi
 mode change 100755 => 100644 src/race.bash
 mode change 100755 => 100644 src/regexp/syntax/make_perl_groups.pl
 mode change 100755 => 100644 src/run.bash
 mode change 100755 => 100644 src/run.rc
 mode change 100755 => 100644 src/runtime/pprof/testdata/test32
 mode change 100755 => 100644 src/runtime/pprof/testdata/test32be
 mode change 100755 => 100644 src/runtime/pprof/testdata/test64
 mode change 100755 => 100644 src/runtime/pprof/testdata/test64be
 mode change 100755 => 100644 src/syscall/mkall.sh
 mode change 100755 => 100644 src/syscall/mkerrors.sh
 mode change 100755 => 100644 src/syscall/mksyscall.pl
 mode change 100755 => 100644 src/syscall/mksyscall_libc.pl
 mode change 100755 => 100644 src/syscall/mksysctl_openbsd.pl
 mode change 100755 => 100644 src/syscall/mksysnum_dragonfly.pl
 mode change 100755 => 100644 src/syscall/mksysnum_freebsd.pl
 mode change 100755 => 100644 src/syscall/mksysnum_linux.pl
 mode change 100755 => 100644 src/syscall/mksysnum_netbsd.pl
 mode change 100755 => 100644 src/syscall/mksysnum_openbsd.pl
 mode change 100755 => 100644 src/syscall/mksysnum_plan9.sh

diff --git a/lib/time/update.bash b/lib/time/update.bash
old mode 100755
new mode 100644
diff --git a/misc/arm/a b/misc/arm/a
old mode 100755
new mode 100644
diff --git a/misc/cgo/fortran/test.bash b/misc/cgo/fortran/test.bash
old mode 100755
new mode 100644
diff --git a/misc/ios/clangwrap.sh b/misc/ios/clangwrap.sh
old mode 100755
new mode 100644
diff --git a/misc/wasm/go_js_wasm_exec b/misc/wasm/go_js_wasm_exec
old mode 100755
new mode 100644
diff --git a/src/all.bash b/src/all.bash
old mode 100755
new mode 100644
diff --git a/src/all.rc b/src/all.rc
old mode 100755
new mode 100644
diff --git a/src/bootstrap.bash b/src/bootstrap.bash
old mode 100755
new mode 100644
diff --git a/src/buildall.bash b/src/buildall.bash
old mode 100755
new mode 100644
diff --git a/src/clean.bash b/src/clean.bash
old mode 100755
new mode 100644
diff --git a/src/clean.rc b/src/clean.rc
old mode 100755
new mode 100644
diff --git a/src/cmd/compile/internal/ssa/gen/cover.bash b/src/cmd/compile/internal/ssa/gen/cover.bash
old mode 100755
new mode 100644
diff --git a/src/cmd/go/mkalldocs.sh b/src/cmd/go/mkalldocs.sh
old mode 100755
new mode 100644
diff --git a/src/cmd/go/testdata/failssh/ssh b/src/cmd/go/testdata/failssh/ssh
old mode 100755
new mode 100644
diff --git a/src/database/sql/convert.go b/src/database/sql/convert.go
index 4d9d070..990ae4d 100644
--- a/src/database/sql/convert.go
+++ b/src/database/sql/convert.go
@@ -324,7 +324,6 @@ func convertAssignRows(dest, src any, rows *Rows) error {
 			if rows == nil {
 				return errors.New("invalid context to convert cursor rows, missing parent *Rows")
 			}
-			rows.closemu.Lock()
 			*d = Rows{
 				dc:          rows.dc,
 				releaseConn: func(error) {},
@@ -340,7 +339,6 @@ func convertAssignRows(dest, src any, rows *Rows) error {
 					parentCancel()
 				}
 			}
-			rows.closemu.Unlock()
 			return nil
 		}
 	}
diff --git a/src/database/sql/fakedb_test.go b/src/database/sql/fakedb_test.go
index d1edcb8..db646ab 100644
--- a/src/database/sql/fakedb_test.go
+++ b/src/database/sql/fakedb_test.go
@@ -1,3 +1,4 @@
+
 // Copyright 2011 The Go Authors. All rights reserved.
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
@@ -5,6 +6,7 @@
 package sql
 
 import (
+	"bytes"
 	"context"
 	"database/sql/driver"
 	"errors"
@@ -1078,10 +1080,9 @@ type rowsCursor struct {
 	errPos int
 	err    error
 
-	// a clone of slices to give out to clients, indexed by the
-	// original slice's first byte address.  we clone them
-	// just so we're able to corrupt them on close.
-	bytesClone map[*byte][]byte
+	// Data returned to clients.
+	// We clone and stash it here so it can be invalidated by Close and Next.
+	driverOwnedMemory [][]byte
 
 	// Every operation writes to line to enable the race detector
 	// check for data races.
@@ -1095,9 +1096,19 @@ func (rc *rowsCursor) touchMem() {
 	rc.line++
 }
 
+func (rc *rowsCursor) invalidateDriverOwnedMemory() {
+	for _, buf := range rc.driverOwnedMemory {
+		for i := range buf {
+			buf[i] = 'x'
+		}
+	}
+	rc.driverOwnedMemory = nil
+}
+
 func (rc *rowsCursor) Close() error {
 	rc.touchMem()
 	rc.parentMem.touchMem()
+	rc.invalidateDriverOwnedMemory()
 	rc.closed = true
 	return nil
 }
@@ -1128,6 +1139,8 @@ func (rc *rowsCursor) Next(dest []driver.Value) error {
 	if rc.posRow >= len(rc.rows[rc.posSet]) {
 		return io.EOF // per interface spec
 	}
+	// Corrupt any previously returned bytes.
+	rc.invalidateDriverOwnedMemory()
 	for i, v := range rc.rows[rc.posSet][rc.posRow].cols {
 		// TODO(bradfitz): convert to subset types? naah, I
 		// think the subset types should only be input to
@@ -1135,20 +1148,13 @@ func (rc *rowsCursor) Next(dest []driver.Value) error {
 		// a wider range of types coming out of drivers. all
 		// for ease of drivers, and to prevent drivers from
 		// messing up conversions or doing them differently.
-		dest[i] = v
-
 		if bs, ok := v.([]byte); ok {
-			if rc.bytesClone == nil {
-				rc.bytesClone = make(map[*byte][]byte)
-			}
-			clone, ok := rc.bytesClone[&bs[0]]
-			if !ok {
-				clone = make([]byte, len(bs))
-				copy(clone, bs)
-				rc.bytesClone[&bs[0]] = clone
-			}
-			dest[i] = clone
+			// Clone []bytes and stash for later invalidation.
+			bs = bytes.Clone(bs)
+			rc.driverOwnedMemory = append(rc.driverOwnedMemory, bs)
+			v = bs
 		}
+		dest[i] = v
 	}
 	return nil
 }
diff --git a/src/database/sql/sql.go b/src/database/sql/sql.go
index d55cee1..4596c22 100644
--- a/src/database/sql/sql.go
+++ b/src/database/sql/sql.go
@@ -3264,18 +3264,18 @@ func rowsColumnInfoSetupConnLocked(rowsi driver.Rows) []*ColumnType {
 // If any of the first arguments implementing Scanner returns an error,
 // that error will be wrapped in the returned error
 func (rs *Rows) Scan(dest ...any) error {
+	// Hold the read lock for the duration of Scan so that Close cannot
+	// proceed while user code (e.g., Scanner) may be reading driver-owned
+	// memory returned by the last call to Next.
 	rs.closemu.RLock()
+	defer rs.closemu.RUnlock()
 
 	if rs.lasterr != nil && rs.lasterr != io.EOF {
-		rs.closemu.RUnlock()
 		return rs.lasterr
 	}
 	if rs.closed {
-		err := rs.lasterrOrErrLocked(errRowsClosed)
-		rs.closemu.RUnlock()
-		return err
+		return rs.lasterrOrErrLocked(errRowsClosed)
 	}
-	rs.closemu.RUnlock()
 
 	if rs.lastcols == nil {
 		return errors.New("sql: Scan called without calling Next")
diff --git a/src/debug/dwarf/testdata/ranges.elf b/src/debug/dwarf/testdata/ranges.elf
old mode 100755
new mode 100644
diff --git a/src/debug/dwarf/testdata/rnglistx.elf b/src/debug/dwarf/testdata/rnglistx.elf
old mode 100755
new mode 100644
diff --git a/src/debug/dwarf/testdata/typedef.elf b/src/debug/dwarf/testdata/typedef.elf
old mode 100755
new mode 100644
diff --git a/src/internal/trace/mkcanned.bash b/src/internal/trace/mkcanned.bash
old mode 100755
new mode 100644
diff --git a/src/make.bash b/src/make.bash
old mode 100755
new mode 100644
diff --git a/src/make.rc b/src/make.rc
old mode 100755
new mode 100644
diff --git a/src/net/http/cgi/testdata/test.cgi b/src/net/http/cgi/testdata/test.cgi
old mode 100755
new mode 100644
diff --git a/src/race.bash b/src/race.bash
old mode 100755
new mode 100644
diff --git a/src/regexp/syntax/make_perl_groups.pl b/src/regexp/syntax/make_perl_groups.pl
old mode 100755
new mode 100644
diff --git a/src/run.bash b/src/run.bash
old mode 100755
new mode 100644
diff --git a/src/run.rc b/src/run.rc
old mode 100755
new mode 100644
diff --git a/src/runtime/pprof/testdata/test32 b/src/runtime/pprof/testdata/test32
old mode 100755
new mode 100644
diff --git a/src/runtime/pprof/testdata/test32be b/src/runtime/pprof/testdata/test32be
old mode 100755
new mode 100644
diff --git a/src/runtime/pprof/testdata/test64 b/src/runtime/pprof/testdata/test64
old mode 100755
new mode 100644
diff --git a/src/runtime/pprof/testdata/test64be b/src/runtime/pprof/testdata/test64be
old mode 100755
new mode 100644
diff --git a/src/syscall/mkall.sh b/src/syscall/mkall.sh
old mode 100755
new mode 100644
diff --git a/src/syscall/mkerrors.sh b/src/syscall/mkerrors.sh
old mode 100755
new mode 100644
diff --git a/src/syscall/mksyscall.pl b/src/syscall/mksyscall.pl
old mode 100755
new mode 100644
diff --git a/src/syscall/mksyscall_libc.pl b/src/syscall/mksyscall_libc.pl
old mode 100755
new mode 100644
diff --git a/src/syscall/mksysctl_openbsd.pl b/src/syscall/mksysctl_openbsd.pl
old mode 100755
new mode 100644
diff --git a/src/syscall/mksysnum_dragonfly.pl b/src/syscall/mksysnum_dragonfly.pl
old mode 100755
new mode 100644
diff --git a/src/syscall/mksysnum_freebsd.pl b/src/syscall/mksysnum_freebsd.pl
old mode 100755
new mode 100644
diff --git a/src/syscall/mksysnum_linux.pl b/src/syscall/mksysnum_linux.pl
old mode 100755
new mode 100644
diff --git a/src/syscall/mksysnum_netbsd.pl b/src/syscall/mksysnum_netbsd.pl
old mode 100755
new mode 100644
diff --git a/src/syscall/mksysnum_openbsd.pl b/src/syscall/mksysnum_openbsd.pl
old mode 100755
new mode 100644
diff --git a/src/syscall/mksysnum_plan9.sh b/src/syscall/mksysnum_plan9.sh
old mode 100755
new mode 100644
-- 
2.45.4

