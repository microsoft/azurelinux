diff --git a/toolkit/Makefile b/toolkit/Makefile
index 669515d03..7afb8dd5d 100644
--- a/toolkit/Makefile
+++ b/toolkit/Makefile
@@ -22,6 +22,8 @@ include $(SCRIPTS_DIR)/utils.mk
 ######## REMAINING BUILD FLAGS ########
 
 STOP_ON_WARNING    ?= n
+#Skip license scanning (useful for air-gapped builds).
+SKIP_LICENSE_SCAN  ?= n
 
 ######## HIGH LEVEL TARGETS ########
 
diff --git a/toolkit/scripts/check-and-collect-licenses.py b/toolkit/scripts/check-and-collect-licenses.py
index ac860f87f..1c20cd236 100755
--- a/toolkit/scripts/check-and-collect-licenses.py
+++ b/toolkit/scripts/check-and-collect-licenses.py
@@ -16,7 +16,8 @@ import tempfile
 import urllib
 import urllib.request
 
-REPO_ROOT = subprocess.run(["git", "rev-parse", "--show-toplevel"], capture_output=True, text=True, check=True).stdout.strip()
+SCRIPT_DIR = Path(os.path.realpath(__file__)).parent
+REPO_ROOT = (SCRIPT_DIR / ".." / "..").resolve()
 OUTPUT_DIR = Path(REPO_ROOT) / "toolkit" / "out"
 LICENSE_SCAN_OUTPUT = OUTPUT_DIR / "LICENSES-SCAN.json"
 LICENSES_DIR = OUTPUT_DIR / "LICENSES"
diff --git a/toolkit/scripts/tools.mk b/toolkit/scripts/tools.mk
index 10d0e8635..580cb9679 100644
--- a/toolkit/scripts/tools.mk
+++ b/toolkit/scripts/tools.mk
@@ -75,9 +75,16 @@ go_ldflags := 	-X github.com/microsoft/azurelinux/toolkit/tools/internal/exe.Too
 				-X github.com/microsoft/azurelinux/toolkit/tools/internal/exe.DistroNameAbbreviation=$(DIST_NAME_ABRV) \
 				-X github.com/microsoft/azurelinux/toolkit/tools/internal/exe.DistroMajorVersion=$(dist_major_version_number)
 
+# Conditionally include license-scan dependency based on SKIP_LICENSE_SCAN flag
+ifeq ($(SKIP_LICENSE_SCAN),y)
+license_scan_dependency =
+else
+license_scan_dependency = license-scan
+endif
+
 # Matching rules for the above targets
 # Tool specific pre-requisites are tracked via $(go-util): $(shell find...) dynamic variable defined above
-$(TOOL_BINS_DIR)/%: $(go_common_files) license-scan
+$(TOOL_BINS_DIR)/%: $(go_common_files) $(license_scan_dependency)
 	cd $(TOOLS_DIR)/$* && \
 		go test -ldflags="$(go_ldflags)" -test.short -covermode=atomic -coverprofile=$(BUILD_DIR)/tools/$*.test_coverage ./... && \
 		CGO_ENABLED=0 go build \
@@ -91,11 +98,15 @@ $(BUILD_DIR)/tools/internal.test_coverage: $(go_internal_files) $(go_imagegen_fi
 		go test -ldflags="$(go_ldflags)" -test.short -covermode=atomic -coverprofile=$@ ./...
 
 .PHONY: imagecustomizer-targz
-imagecustomizer-targz: go-imagecustomizer license-scan
+imagecustomizer-targz: go-imagecustomizer $(license_scan_dependency)
 	rm -rf $(BUILD_DIR)/imagecustomizertar || true
 	mkdir -p $(BUILD_DIR)/imagecustomizertar
 	cp $(TOOL_BINS_DIR)/imagecustomizer $(BUILD_DIR)/imagecustomizertar
+ifeq ($(SKIP_LICENSE_SCAN),y)
+	@echo "Skipping license scan - LICENSES directory will not be included"
+else
 	cp -r $(toolkit_root)/out/LICENSES $(BUILD_DIR)/imagecustomizertar
+endif
 	tar -C $(BUILD_DIR)/imagecustomizertar -cz --file $(toolkit_root)/out/imagecustomizer.tar.gz .
 
 # Downloads all the go dependencies without using sudo, so we don't break other go use cases for the user.
