From 2c31b7b2fe2436a083466e19d4f0a889256dd4f5 Mon Sep 17 00:00:00 2001
From: kavyasree <kkaitepalli@microsoft.com>
Date: Thu, 19 Dec 2024 15:26:45 +0530
Subject: [PATCH] Fix CVE-2023-45803

---
 pip/_vendor/urllib3/_collections.py | 19 ++++++++++++++++++-
 pip/_vendor/urllib3/connectionpool.py     |  5 +++++
 pip/_vendor/urllib3/poolmanager.py  |  7 +++++--
 3 files changed, 28 insertions(+), 3 deletions(-)

diff --git a/pip/_vendor/urllib3/_collections.py b/pip/_vendor/urllib3/_collections.py
index da9857e986..8d0194f7e5 100644
--- a/pip/_vendor/urllib3/_collections.py
+++ b/pip/_vendor/urllib3/_collections.py
@@ -267,7 +267,24 @@ class HTTPHeaderDict(MutableMapping):
             return default
         else:
             return vals[1:]
-
+    def _prepare_for_method_change(self) -> Self:
+        """
+        Remove content-specific header fields before changing the request
+        method to GET or HEAD according to RFC 9110, Section 15.4.
+        """
+        content_specific_headers = [
+            "Content-Encoding",
+            "Content-Language",
+            "Content-Location",
+            "Content-Type",
+            "Content-Length",
+            "Digest",
+            "Last-Modified",
+        ]
+        for header in content_specific_headers:
+            self.discard(header)
+        return self
+    
     # Backwards compatibility for httplib
     getheaders = getlist
     getallmatchingheaders = getlist
diff --git a/pip/_vendor/urllib3/connectionpool.py b/pip/_vendor/urllib3/connectionpool.py
index 96844d9337..5a6adcbdc7 100644
--- a/pip/_vendor/urllib3/connectionpool.py
+++ b/pip/_vendor/urllib3/connectionpool.py
@@ -9,6 +9,7 @@ import warnings
 from socket import error as SocketError
 from socket import timeout as SocketTimeout
 
+from ._collections import HTTPHeaderDict
 from .connection import (
     BaseSSLError,
     BrokenPipeError,
@@ -843,7 +844,11 @@ class HTTPConnectionPool(ConnectionPool, RequestMethods):
         redirect_location = redirect and response.get_redirect_location()
         if redirect_location:
             if response.status == 303:
+                # Change the method according to RFC 9110, Section 15.4.4.
                 method = "GET"
+                # And lose the body not to transfer anything sensitive.
+                body = None
+                headers = HTTPHeaderDict(headers)._prepare_for_method_change()
 
             try:
                 retries = retries.increment(method, url, response=response, _pool=self)
diff --git a/pip/_vendor/urllib3/poolmanager.py b/pip/_vendor/urllib3/poolmanager.py
index 14b10daf3a..fb51bf7d96 100644
--- a/pip/_vendor/urllib3/poolmanager.py
+++ b/pip/_vendor/urllib3/poolmanager.py
@@ -4,7 +4,7 @@ import collections
 import functools
 import logging
 
-from ._collections import RecentlyUsedContainer
+from ._collections import HTTPHeaderDict, RecentlyUsedContainer
 from .connectionpool import HTTPConnectionPool, HTTPSConnectionPool, port_by_scheme
 from .exceptions import (
     LocationValueError,
@@ -382,9 +382,12 @@ class PoolManager(RequestMethods):
         # Support relative URLs for redirecting.
         redirect_location = urljoin(url, redirect_location)
 
-        # RFC 7231, Section 6.4.4
         if response.status == 303:
+            # Change the method according to RFC 9110, Section 15.4.4.
             method = "GET"
+            # And lose the body not to transfer anything sensitive.
+            kw["body"] = None
+            kw["headers"] = HTTPHeaderDict(kw["headers"])._prepare_for_method_change()
 
         retries = kw.get("retries")
         if not isinstance(retries, Retry):
-- 
2.34.1

