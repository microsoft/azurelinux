From b5403362c386b80e4726f52897c5fe5d3705a9a6 Mon Sep 17 00:00:00 2001
From: AllSpark <allspark@microsoft.com>
Date: Wed, 29 Oct 2025 05:38:18 +0000
Subject: [PATCH] Fix expected value assertion for NaN value (fix #3393): -
 Include math.h for isnan - Skip reparsing/roundtrip assertion when expected
 is NaN under USE_DECNUM

Signed-off-by: Azure Linux Security Servicing Account <azurelinux-security@microsoft.com>
Upstream-reference: AI Backport of https://github.com/jqlang/jq/commit/304a0f7e0ec376bf0ecabf9f96b2ab3432548819.patch
---
 src/jq_test.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/src/jq_test.c b/src/jq_test.c
index 7a396b9..0172a76 100644
--- a/src/jq_test.c
+++ b/src/jq_test.c
@@ -2,6 +2,7 @@
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
+#include <math.h>
 #include "jv.h"
 #include "jq.h"
 
@@ -157,11 +158,13 @@ static void run_jq_tests(jv lib_dirs, int verbose, FILE *testdata) {
         printf(" for test at line number %u: %s\n", lineno, prog);
         pass = 0;
       }
-      jv as_string = jv_dump_string(jv_copy(expected), rand() & ~(JV_PRINT_COLOR|JV_PRINT_REFCOUNT));
-      jv reparsed = jv_parse_sized(jv_string_value(as_string), jv_string_length_bytes(jv_copy(as_string)));
-      assert(jv_equal(jv_copy(expected), jv_copy(reparsed)));
-      jv_free(as_string);
-      jv_free(reparsed);
+      if (!(jv_get_kind(expected) == JV_KIND_NUMBER && isnan(jv_number_value(expected)))) {
+        jv as_string = jv_dump_string(jv_copy(expected), rand() & ~(JV_PRINT_COLOR|JV_PRINT_REFCOUNT));
+        jv reparsed = jv_parse_sized(jv_string_value(as_string), jv_string_length_bytes(jv_copy(as_string)));
+        assert(jv_equal(jv_copy(expected), jv_copy(reparsed)));
+        jv_free(as_string);
+        jv_free(reparsed);
+      }
       jv_free(expected);
       jv_free(actual);
     }
-- 
2.45.4

