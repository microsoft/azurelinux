From 1425f9e27cb1bae39e0b22e25fce50daa47618ca Mon Sep 17 00:00:00 2001
From: Tobias Brick <tobiasb@exchange.microsoft.com>
Date: Tue, 15 Oct 2024 22:59:08 +0000
Subject: [PATCH] Merged PR 11618838: add parameter to version script to print
 the commit info environment variables

Add parameter to version script to print the commit info environment variables. This makes it easier to get those right for builds based on the source tarball rather than from a git clone.

----
#### AI description  (iteration 1)
#### PR Classification
New feature

#### PR Summary
Added a new parameter to the version script to print commit information as environment variables.
- `scripts/version.py`: Introduced `--commit-info` argument to print commit hash and timestamp as environment variables. Added `print_commit_info` function to handle this new feature.
---
 scripts/version.py | 20 ++++++++++++++++++--
 1 file changed, 18 insertions(+), 2 deletions(-)

diff --git a/scripts/version.py b/scripts/version.py
index 49edf9b..4ac1862 100644
--- a/scripts/version.py
+++ b/scripts/version.py
@@ -180,27 +180,43 @@ def print_devops_vars(version_info: SymCryptVersion) -> None:
     set_task_variable("VER_MINOR", version_info.minor)
     set_task_variable("VER_PATCH", version_info.patch)
 
+def print_commit_info(version_info: SymCryptVersion) -> None:
+    """
+    Prints the commit information as environment variables that would override the commit hash and timestamp.
+    """
+
+    print("export {}={}".format(ENV_SYMCRYPT_BRANCH, version_info.branch))
+    print("export {}={}".format(ENV_SYMCRYPT_COMMIT_HASH, version_info.commit_hash))
+    print("export {}={}".format(ENV_SYMCRYPT_COMMIT_TIMESTAMP, version_info.commit_timestamp.isoformat(timespec = "seconds")))
+
 def main() -> None:
     """
     Entrypoint
     """
 
     parser = argparse.ArgumentParser(description = "Versioning helper script for SymCrypt.")
+    parser.add_argument("--no-print-version-number", dest = "print_version_number", help = "Do not print the version number", action = "store_false", default = True)
     group = parser.add_mutually_exclusive_group()
     group.add_argument("-b", "--build-info", help = "Generate buildInfo.h", action = "store_true")
     group.add_argument("--devops", help = "Format output to set Azure DevOps variables", action = "store_true")
+    group.add_argument("--commit-info",
+        help = "Format commit info as environment variables that would override the commit hash and timestamp, which can then be used when building from the source tarball rather than a git clone.",
+        action = "store_true")
 
     args = parser.parse_args()
 
     # Parse the version information from the SymCrypt headers
     version_info = get_version_info()
 
-    print("{}.{}.{}".format(version_info.major, version_info.minor, version_info.patch))
+    if args.print_version_number:
+        print("{}.{}.{}".format(version_info.major, version_info.minor, version_info.patch))
 
     if args.build_info:
         generate_build_info(version_info)
     elif args.devops:
         print_devops_vars(version_info)
+    elif args.commit_info:
+        print_commit_info(version_info)
 
 if __name__ == "__main__":
-    main()
\ No newline at end of file
+    main()
-- 
2.39.4

