From 9a2bc8e076da32e2035090aa8a8e2d3a82b9af0b Mon Sep 17 00:00:00 2001
From: Tobias Brick <tobiasb@microsoft.com>
Date: Wed, 17 Apr 2024 21:28:21 +0000
Subject: [PATCH] Add Kernel FIPS mode flag support

---
 crypto/context.c            | 36 ++++++++++++++++++++++++++++++++++++
 include/internal/provider.h |  3 +++
 2 files changed, 39 insertions(+)

diff --git a/crypto/context.c b/crypto/context.c
index 33d52a9..a9694e7 100644
--- a/crypto/context.c
+++ b/crypto/context.c
@@ -17,6 +17,41 @@
 #include "crypto/decoder.h"
 #include "crypto/context.h"
 
+# include <sys/types.h>
+# include <sys/stat.h>
+# include <fcntl.h>
+# include <unistd.h>
+# include <openssl/evp.h>
+
+# define FIPS_MODE_SWITCH_FILE "/proc/sys/crypto/fips_enabled"
+
+static int kernel_fips_flag;
+
+static void read_kernel_fips_flag(void)
+{
+	char buf[2] = "0";
+	int fd;
+
+	if (ossl_safe_getenv("OPENSSL_FORCE_FIPS_MODE") != NULL) {
+		buf[0] = '1';
+	} else if ((fd = open(FIPS_MODE_SWITCH_FILE, O_RDONLY)) >= 0) {
+		while (read(fd, buf, sizeof(buf)) < 0 && errno == EINTR) ;
+		close(fd);
+	}
+
+	if (buf[0] == '1') {
+		kernel_fips_flag = 1;
+	}
+
+		return;
+}
+
+int ossl_get_kernel_fips_flag()
+{
+	return kernel_fips_flag;
+}
+
+
 struct ossl_lib_ctx_st {
     CRYPTO_RWLOCK *lock, *rand_crngt_lock;
     OSSL_EX_DATA_GLOBAL global;
@@ -368,6 +403,7 @@ static int default_context_inited = 0;
 
 DEFINE_RUN_ONCE_STATIC(default_context_do_init)
 {
+	 read_kernel_fips_flag();
     if (!CRYPTO_THREAD_init_local(&default_context_thread_local, NULL))
         goto err;
 
diff --git a/include/internal/provider.h b/include/internal/provider.h
index ab41d64..efb12ae 100644
--- a/include/internal/provider.h
+++ b/include/internal/provider.h
@@ -112,6 +112,9 @@ int ossl_provider_init_as_child(OSSL_LIB_CTX *ctx,
                                 const OSSL_DISPATCH *in);
 void ossl_provider_deinit_child(OSSL_LIB_CTX *ctx);
 
+/* FIPS flag access */
+int ossl_get_kernel_fips_flag(void);
+
 # ifdef __cplusplus
 }
 # endif
-- 
2.33.8

