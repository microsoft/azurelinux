From 515697fa3fab2ecd65484e2d98e1360aa95a2543 Mon Sep 17 00:00:00 2001
From: AllSpark <allspark@microsoft.com>
Date: Sat, 20 Sep 2025 06:27:58 +0000
Subject: [PATCH] Only allow deserialization of s by module and name.

Arbitrary functions and classes are not allowed.

- Made  extend , this required moving imports to avoid circular imports
-  no longer need to extend  directly
- Made feature space  and  extend
- Also disallow public function

Backport: adjust get_attr_skiplist implementation accordingly.
Signed-off-by: Azure Linux Security Servicing Account <azurelinux-security@microsoft.com>
Upstream-reference: AI Backport of https://github.com/keras-team/keras/pull/21429.patch
---
 keras/src/saving/saving_lib.py | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/keras/src/saving/saving_lib.py b/keras/src/saving/saving_lib.py
index e71e33b..94b9561 100644
--- a/keras/src/saving/saving_lib.py
+++ b/keras/src/saving/saving_lib.py
@@ -772,7 +772,7 @@ def get_attr_skiplist(obj_type):
         from keras.src.ops.operation import Operation
 
         ref_obj = Operation()
-        skipset.update(dir(ref_obj))
+        skiplist += dir(ref_obj)
     if obj_type == "Layer":
         from keras.src.layers.layer import Layer
 
@@ -810,12 +810,12 @@ def get_attr_skiplist(obj_type):
         from keras.src.layers.preprocessing.feature_space import Cross
 
         ref_obj = Cross((), 1)
-        skipset.update(dir(ref_obj))
+        skiplist += dir(ref_obj)
     elif obj_type == "Feature":
         from keras.src.layers.preprocessing.feature_space import Feature
 
         ref_obj = Feature("int32", lambda x: x, "int")
-        skipset.update(dir(ref_obj))
+        skiplist += dir(ref_obj)
     else:
         raise ValueError(
             f"get_attr_skiplist got invalid {obj_type=}. "
-- 
2.45.4

