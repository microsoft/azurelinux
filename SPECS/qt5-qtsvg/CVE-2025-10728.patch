From c5ac0e152a433c36da7f293f5e9c46a4645093a9 Mon Sep 17 00:00:00 2001
From: AllSpark <allspark@microsoft.com>
Date: Tue, 7 Oct 2025 10:09:13 +0000
Subject: [PATCH] Replace check for endless recursion when loading

The old check parsed the tree of SvgNodes again and again which lead to
quadratic complexity. Instead, set and check a bool where the recursion
may actually happen which is faster and only has linear complexity.

Partially reverts 0332df304f013ded362537c1f61556098b875352

I chose to have the check in QSvgPattern::renderPattern() because:

- It not only appears in the recursive backtrace of the stack-overflow
  which was fixed using the qudratic check, but also in the backtrace
  of another, still unfixed stack overflow. That way, both can be fixed
  by the same patch. Credit to OSS-Fuzz for finding them.
- The function already had some error checking and returns a default
  value when it cannot render the content. In the same way, I can return
  a QImage of the right size but without any content when the endless
  recursion is about to happen.

[ChangeLog] Speed up loading by replacing check for cyclic elements
[ChangeLog] Fix stack overflow when an element references its child
 element using url()

Fixes: QTBUG-137553
Pick-to: 6.8
Change-Id: If011c15fde50dcefeb653d1d5995ff1347e7b5ac
Reviewed-by: Hatem ElKharashy <hatem.elkharashy@qt.io>
Reviewed-by: Qt Cherry-pick Bot <cherrypick_bot@qt-project.org>
Signed-off-by: Azure Linux Security Servicing Account <azurelinux-security@microsoft.com>
Upstream-reference: AI Backport of https://github.com/qt/qtsvg/commit/6a6273126770006232e805cf1631f93d4919b788.patch
---
 src/svg/qsvghandler.cpp | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/svg/qsvghandler.cpp b/src/svg/qsvghandler.cpp
index ed6258d..29ab038 100644
--- a/src/svg/qsvghandler.cpp
+++ b/src/svg/qsvghandler.cpp
@@ -3669,6 +3669,11 @@ void QSvgHandler::parse()
             // namespaceUri is empty. The only possible strategy at
             // this point is to do what everyone else seems to do and
             // ignore the reported namespaceUri completely.
+            // [Backport] Replace check for endless recursion when loading:
+            // The previous implementation attempted to detect cycles globally (detectCyclesAndWarn),
+            // which led to quadratic complexity. This code path has been simplified to rely on
+            // element-specific recursion guards where applicable (e.g., use elements, structure bounds).
+            // See upstream patch for details.
             if (remainingUnfinishedElements
                     && startElement(xml->name().toString(), xml->attributes())) {
                 --remainingUnfinishedElements;
-- 
2.45.4

