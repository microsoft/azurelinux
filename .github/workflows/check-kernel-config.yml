# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# This action checks that required kernel configs have not been removed or
# modified to an undesirable value. It also checks that new configs added to
# the kernel config files are in the list of required configs.
name: Kernel Required Configs Check

on:
  push:
    branches: [main, 1.0*, 2.0*, 3.0*, fasttrack/*]
    paths:
      - 'SPECS/kernel*/config*'
      - toolkit/scripts/os-required-configs.json
  pull_request:
    branches: [main, 1.0*, 2.0*, 3.0*, fasttrack/*]
    paths:
      - 'SPECS/kernel*/config*'
      - toolkit/scripts/os-required-configs.json

jobs:
  check:
    name: Kernel configs check
    runs-on: ubuntu-latest

    steps:
      # Checkout the branch of our repo that triggered this action
      - name: Workflow trigger checkout
        uses: actions/checkout@v4

      - name: Get base commit for PRs
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          git fetch origin ${{ github.base_ref }}
          echo "base_sha=$(git rev-parse origin/${{ github.base_ref }})" >> $GITHUB_ENV
          echo "Merging ${{ github.sha }} into ${{ github.base_ref }}"

      - name: Get base commit for Pushes
        if: ${{ github.event_name == 'push' }}
        run: |
          git fetch origin ${{ github.event.before }}
          echo "base_sha=${{ github.event.before }}" >> $GITHUB_ENV
          echo "Merging ${{ github.sha }} into ${{ github.event.before }}"

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Get Python dependencies
        run: python3 -m pip install -r toolkit/scripts/requirements.txt

      # Check if the required configs file is sorted
      - name: Check os-required-configs.json format
        run:
          python3 toolkit/scripts/check_required_config_fmt.py toolkit/scripts/os-required-configs.json

      # Check if kernel configs changed
      - name: Check if config files changed
        run: |
          echo "Files changed: '$(git diff-tree --no-commit-id --name-only -r ${{ env.base_sha }} ${{ github.sha }})'"
          changed_configs=$(git diff-tree --diff-filter=d  --no-commit-id --name-only -r ${{ env.base_sha }} ${{ github.sha }} | { grep "SPECS/kernel.*/config.*$" || test $? = 1; })
          echo "Files to validate: '${changed_configs}'"
          echo "updated_configs=$(echo ${changed_configs})" >> $GITHUB_ENV

      # Check if new configs were added
      - name: Parse for new config changes
        run: |
          # Check for new configs in the PR
          # and check if they are in required configs
          holder="${{ env.updated_configs }}"
          for file in $holder; do
            config_diff=$(git diff-tree -p -r ${{ env.base_sha }} ${{ github.sha }} -- ${file})
            echo "config_diff for ${file} : ${config_diff}"
            python3 toolkit/scripts/check_new_kernel_configs.py --required_configs=toolkit/scripts/os-required-configs.json --config_file="${file}" --config_diff="${config_diff}"
          done

      # Check if required configs were removed or modified
      - name: Run kernel config checking script
        run: |
          holder="${{ env.updated_configs }}"
          for file in $holder; do
            python3 toolkit/scripts/check_required_kernel_configs.py --required_configs toolkit/scripts/os-required-configs.json --config_file "${file}"
          done
