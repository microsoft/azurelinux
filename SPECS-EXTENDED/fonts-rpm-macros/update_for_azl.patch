diff --git a/rpm/lua/rpm/fonts.lua b/rpm/lua/rpm/fonts.lua
index bb7475b..c9bd17c 100644
--- a/rpm/lua/rpm/fonts.lua
+++ b/rpm/lua/rpm/fonts.lua
@@ -51,8 +51,8 @@ end
 -- Reformat some text into something that can be included in an AppStream
 -- XML description
 local function txt2xml(text)
-  local      fedora = require "fedora.common"
-  local        text = fedora.wordwrap(text)
+  local      azl = require "azl.common"
+  local        text = azl.wordwrap(text)
   local      output = ""
   local     oldtag  = nil
   local oldadvance  = nil
diff --git a/rpm/lua/srpm/fonts.lua b/rpm/lua/srpm/fonts.lua
index 213fe61..2d3bf87 100644
--- a/rpm/lua/srpm/fonts.lua
+++ b/rpm/lua/srpm/fonts.lua
@@ -92,12 +92,12 @@ end
 -- The fontenv macro main processing function
 -- See the documentation in the macros.fonts file for argument description
 local function env(suffix, verbose, globvalues)
-  local fedora = require "fedora.common"
+  local azl = require "azl.common"
   local ismain = (suffix == "") or (suffix == "0")
-  fedora.zalias({"foundry", "fontlicense"}, verbose)
-  fedora.safeset("fontlicense", "%{license}", verbose)
+  azl.zalias({"foundry", "fontlicense"}, verbose)
+  azl.safeset("fontlicense", "%{license}", verbose)
   if ismain then
-    fedora.zalias({"fontsummary", "fontdescription", "fontpkgname", "fonthumanname",
+    azl.zalias({"fontsummary", "fontdescription", "fontpkgname", "fonthumanname",
                    "fontpkgheader", "fonts", "fontsex", "fontconfs", "fontconfsex",
                    "fontconfngs", "fontconfngsex",
                    "fontappstreams", "fontappstreamsex",
@@ -107,39 +107,39 @@ local function env(suffix, verbose, globvalues)
   for _, v in ipairs({"foundry", "fontdocs", "fontdocsex",
                       "fontlicense", "fontlicenses", "fontlicensesex"}) do
     if (rpm.expand("%{" .. v .. "}") ~= "%{" .. v .. "}") then
-      fedora.safeset(v .. suffix, "%{" .. v .. "}", verbose)
+      azl.safeset(v .. suffix, "%{" .. v .. "}", verbose)
     end
   end
   for g, _ in pairs(globargs) do
     local v = rpm.expand("%{?" .. g .. suffix .. "} " .. (globvalues[g] or ""))
     if (string.gsub(v, "[%s]+", "") ~= "") then
-      fedora.explicitset(  "current" .. g, v, verbose)
+      azl.explicitset(  "current" .. g, v, verbose)
     else
-      fedora.explicitunset("current" .. g,    verbose)
+      azl.explicitunset("current" .. g,    verbose)
     end
   end
   local basename = rpm.expand("%{?foundry" .. suffix .. ":%{foundry" .. suffix .. "} }%{fontfamily" .. suffix .. "}")
-  fedora.safeset("fontpkgname"   .. suffix, rpmname(basename), verbose)
-  fedora.safeset("fonthumanname" .. suffix, basename, verbose)
-  fedora.safeset("fontdir"       .. suffix, "%{_fontbasedir}/%{fontpkgname"  .. suffix .. "}", verbose)
-  fedora.safeset("fontfilelist"  .. suffix, "%{_builddir}/%{?buildsubdir}/%{fontpkgname" .. suffix .. "}.list", verbose)
+  azl.safeset("fontpkgname"   .. suffix, rpmname(basename), verbose)
+  azl.safeset("fonthumanname" .. suffix, basename, verbose)
+  azl.safeset("fontdir"       .. suffix, "%{_fontbasedir}/%{fontpkgname"  .. suffix .. "}", verbose)
+  azl.safeset("fontfilelist"  .. suffix, "%{_builddir}/%{?buildsubdir}/%{fontpkgname" .. suffix .. "}.list", verbose)
   if ismain then
-    fedora.zalias({"fontpkgname", "fontdir", "fontfilelist"})
+    azl.zalias({"fontpkgname", "fontdir", "fontfilelist"})
   end
   for _, v in ipairs({"foundry", "fontpkgname", "fonthumanname", "fontpkgheader",
                       "fontdir", "fontfilelist", "fontfamily", "fontlicense",
                       "fontsummary", "fontdescription"}) do
     if (rpm.expand("%{?" .. v .. suffix .. "}") ~= "") then
-      fedora.explicitset(  "current" .. v, "%{" .. v .. suffix .. "}", verbose)
+      azl.explicitset(  "current" .. v, "%{" .. v .. suffix .. "}", verbose)
     else
-      fedora.explicitunset("current" .. v,                             verbose)
+      azl.explicitunset("current" .. v,                             verbose)
     end
   end
 end
 
 -- Create a single %package section for a fonts subpackage
 local function singlepkg(forcemain, forcesub, suffix, verbose)
-  local fedora = require "fedora.common"
+  local azl = require "azl.common"
   local    sub = (not forcemain) and (forcesub or ((suffix ~= nil) and (suffix ~= "") and (suffix ~= "0")))
   env(suffix, verbose, {})
   name = sub and "%package     -n " or "Name:           "
@@ -154,15 +154,15 @@ local function singlepkg(forcemain, forcesub, suffix, verbose)
       "Requires:       fontpackages-filesystem\n" ..
       "%{?currentfontpkgheader}\n" ..
       "%description -n %{currentfontpkgname}\n") ..
-    fedora.wordwrap("%{?currentfontdescription}") ..
+    azl.wordwrap("%{?currentfontdescription}") ..
     "\n")
 end
 
 -- Create one or all %package sections for fonts subpackages
 local function pkg(forcemain, forcesub, suffix, processall, verbose)
-  local fedora = require "fedora.common"
+  local azl = require "azl.common"
   if processall then
-    for _, suffix in pairs(fedora.getsuffixes("fontfamily")) do
+    for _, suffix in pairs(azl.getsuffixes("fontfamily")) do
        singlepkg(forcemain, forcesub, suffix, verbose)
     end
   else
@@ -172,8 +172,8 @@ end
 
 -- Create a font (sub)metapackage header
 local function metapkg(name, summary, description, suffixes)
-  local   fedora = require "fedora.common"
-  local fontpkgs = fedora.getsuffixed("fontpkgname")
+  local   azl = require "azl.common"
+  local fontpkgs = azl.getsuffixed("fontpkgname")
   if (name == "") then
     name, _ = string.gsub(rpm.expand("%{name}"), "-fonts$", "")
     name    = name .. "-fonts-all"
@@ -184,7 +184,7 @@ local function metapkg(name, summary, description, suffixes)
   if (description == "") then
     description = "This meta-package installs all the font packages, generated from the %{name} source package."
   end
-  description = fedora.wordwrap(description)
+  description = azl.wordwrap(description)
   print(rpm.expand(
     "%package   -n " .. name    .. "\n" ..
     "Summary:   "    .. summary .. "\n"))
diff --git a/rpm/macros.d/macros.fonts-rpm b/rpm/macros.d/macros.fonts-rpm
index 6d2fa82..2426370 100644
--- a/rpm/macros.d/macros.fonts-rpm
+++ b/rpm/macros.d/macros.fonts-rpm
@@ -23,7 +23,7 @@
 # Putting multiple lines of UTF-8 text inside a variable is usually
 # accomplished with a %%{expand: some_text}.
 %fonttxt2xml(v:) %{lua:
-local    fonts = require "fedora.rpm.fonts"
+local    fonts = require "azl.rpm.fonts"
 local variable = "%{" .. rpm.expand("%{-v*}%{!-v:_description}") .. "}"
 print(fonts.txt2xml(variable))
 }
@@ -35,8 +35,8 @@ print(fonts.txt2xml(variable))
 #                     -z calls
 # -v                  be verbose
 %fontbuild(z:av) %{lua:
-local     fedora = require "fedora.common"
-local      fonts = require "fedora.srpm.fonts"
+local     azl = require "azl.common"
+local      fonts = require "azl.srpm.fonts"
 local processall = (rpm.expand("%{-a}") ~= "") and (rpm.expand("%{-z}") == "")
 local    verbose = (rpm.expand("%{-v}") ~= "")
 local function process(suffix)
@@ -46,7 +46,7 @@ local function process(suffix)
   if not verbose then print('set -x\\n') end
 end
 if processall then
-  for _,s in pairs(fedora.getsuffixes("fontfamily")) do
+  for _,s in pairs(azl.getsuffixes("fontfamily")) do
     process(s)
   end
 else
@@ -71,8 +71,8 @@ end
 # -l "<shell globs>"  licensing files to include. Alternatively, set %{fontlicenses<number>}
 # -L "<shell globs>"  licensing files to exclude. Alternatively, set %{fontlicensesex<number>}
 %fontinstall(z:avf:F:c:C:s:S:d:D:l:L:) %{lua:
-local     fedora = require "fedora.common"
-local      fonts = require "fedora.srpm.fonts"
+local     azl = require "azl.common"
+local      fonts = require "azl.srpm.fonts"
 local processall = (rpm.expand("%{-a}") ~= "") and (rpm.expand("%{-z}") == "")
 local    verbose = (rpm.expand("%{-v}") ~= "")
 local globvalues = {}
@@ -86,7 +86,7 @@ local function process(suffix)
   if not verbose then print('set -x\\n') end
 end
 if processall then
-  for _,s in pairs(fedora.getsuffixes("fontfamily")) do
+  for _,s in pairs(azl.getsuffixes("fontfamily")) do
     process(s)
   end
 else
@@ -101,8 +101,8 @@ end
 #                     -z calls
 # -v                  be verbose
 %fontcheck(z:av) %{lua:
-local     fedora = require "fedora.common"
-local      fonts = require "fedora.srpm.fonts"
+local     azl = require "azl.common"
+local      fonts = require "azl.srpm.fonts"
 local processall = (rpm.expand("%{-a}") ~= "") and (rpm.expand("%{-z}") == "")
 local    verbose = (rpm.expand("%{-v}") ~= "")
 local function process(suffix)
@@ -115,7 +115,7 @@ local function process(suffix)
     ]]))
 end
 if processall then
-  for _,s in pairs(fedora.getsuffixes("fontfamily")) do
+  for _,s in pairs(azl.getsuffixes("fontfamily")) do
     process(s)
   end
 else
@@ -130,8 +130,8 @@ end
 #                     -z calls
 # -v                  be verbose
 %fontfiles(z:av) %{lua:
-local     fedora = require "fedora.common"
-local      fonts = require "fedora.srpm.fonts"
+local     azl = require "azl.common"
+local      fonts = require "azl.srpm.fonts"
 local processall = (rpm.expand("%{-a}") ~= "") and (rpm.expand("%{-z}") == "")
 local    verbose = (rpm.expand("%{-v}") ~= "")
 local function process(suffix)
@@ -139,7 +139,7 @@ local function process(suffix)
   print(rpm.expand('%files -n %{currentfontpkgname} -f %{currentfontfilelist}\\n'))
 end
 if processall then
-  for _,s in pairs(fedora.getsuffixes("fontfamily")) do
+  for _,s in pairs(azl.getsuffixes("fontfamily")) do
     process(s)
   end
 else
diff --git a/rpm/macros.d/macros.fonts-srpm b/rpm/macros.d/macros.fonts-srpm
index 77365d6..8132b95 100644
--- a/rpm/macros.d/macros.fonts-srpm
+++ b/rpm/macros.d/macros.fonts-srpm
@@ -45,7 +45,7 @@
 # Sanitize a font family name that can then serve as rpm package name
 # Mandatory parameter: a font family name
 %fontrpmname() %{lua:
-local fonts = require "fedora.srpm.fonts"
+local fonts = require "azl.srpm.fonts"
 print(fonts.rpmname(rpm.expand("%1")))
 }
 
@@ -67,7 +67,7 @@ print(fonts.rpmname(rpm.expand("%1")))
 # -l "<shell globs>"  licensing files to include. Alternatively, set %{fontlicenses<number>}
 # -L "<shell globs>"  licensing files to exclude. Alternatively, set %{fontlicensesex<number>}
 %fontenv(z:vf:F:c:C:s:S:d:D:l:L:) %{lua:
-local      fonts = require "fedora.srpm.fonts"
+local      fonts = require "azl.srpm.fonts"
 local     suffix =  rpm.expand("%{?-z*}")
 local    verbose = (rpm.expand("%{-v}") ~= "")
 local globvalues = {}
@@ -88,7 +88,7 @@ fonts.env(suffix, verbose, globvalues)
 #                     by itself the macro assumes the zero or nil suffix block
 #                     corresponds to the main package header
 %fontpkg(z:avms) %{lua:
-local      fonts =  require "fedora.srpm.fonts"
+local      fonts =  require "azl.srpm.fonts"
 local     suffix =  rpm.expand("%{?-z*}")
 local processall = (rpm.expand("%{-a}") ~= "") and (rpm.expand("%{-z}") == "")
 local    verbose = (rpm.expand("%{-v}") ~= "")
@@ -104,7 +104,7 @@ fonts.pkg(forcemain, forcesub, suffix, processall, verbose)
 # -z "<numbers>"  restrict metapackaging to <numbers> comma-separated list of
 #                 font package suffixes
 %fontmetapkg(n:s:d:z:) %{lua:
-local        fonts = require "fedora.srpm.fonts"
+local        fonts = require "azl.srpm.fonts"
 local         name = rpm.expand("%{?-n*}")
 local      summary = rpm.expand("%{?-s*}")
 if (summary ~= "") then
