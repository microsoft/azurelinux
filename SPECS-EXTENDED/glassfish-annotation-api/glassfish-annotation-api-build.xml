<?xml version="1.0" encoding="UTF-8"?>

<project name="javax.annotation-api" default="all" basedir=".">

  <!-- ====================================================================== -->
  <!-- Build environment properties                                           -->
  <!-- ====================================================================== -->

  <property file="build.properties"/>

  <property name="project.version" value="1.3.2"/>
  <property name="project.artifactId" value="javax.annotation-api"/>
  <property name="project.groupId" value="javax.annotation"/>
  <property name="project.organization.name" value="GlassFish Community"/>
  <property name="project.name" value="${project.groupId} API"/>

  <property name="build.finalName" value="${project.artifactId}-${project.version}"/>
  <property name="build.dir" value="target"/>
  <property name="build.outputDir" value="${build.dir}/classes"/>
  <property name="build.srcDir.0" value="src/main/java"/>

  <property name="compiler.source" value="1.8"/>
  <property name="compiler.target" value="1.8"/>

  <property name="reporting.outputDirectory" value="${build.dir}/site"/>

  <property name="spec.version" value="1.3"/>
  <property name="spec.extension.name" value="${project.groupId}"/>
  <property name="spec.vendor.name" value="Oracle Corporation"/>
  <property name="implementation.vendor.id" value="org.glassfish"/>

  <!-- ====================================================================== -->
  <!-- Cleaning up target                                                     -->
  <!-- ====================================================================== -->

  <target name="clean" description="Clean the output directory">
    <delete dir="${build.dir}"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Compilation target                                                     -->
  <!-- ====================================================================== -->

  <target name="compile" description="Compile the code">
    <mkdir dir="${build.outputDir}"/>
    <javac destdir="${build.outputDir}"
           nowarn="false"
           debug="true"
           optimize="false"
           deprecation="true"
           target="${compiler.target}"
           verbose="false"
           fork="false"
           source="${compiler.source}">
      <src>
        <pathelement location="${build.srcDir.0}"/>
      </src>
    </javac>
  </target>

  <!-- ====================================================================== -->
  <!-- Javadoc target                                                         -->
  <!-- ====================================================================== -->

  <target name="javadoc" description="Generates the Javadoc of the application">
    <javadoc sourcepath="${build.srcDir.0}"
             packagenames="*"
             destdir="${reporting.outputDirectory}/apidocs"
             access="protected"
             verbose="false"
             version="true"
             use="true"
             author="true"
             splitindex="false"
             nodeprecated="false"
             nodeprecatedlist="false"
             notree="false"
             noindex="false"
             nohelp="false"
             nonavbar="false"
             serialwarn="false"
             source="${compiler.source}"
             linksource="false"
             breakiterator="false"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Package target                                                         -->
  <!-- ====================================================================== -->

  <target name="package" depends="compile" description="Package the application">
    <jar jarfile="${build.dir}/${build.finalName}.jar"
         compress="true"
         index="false"
         basedir="${build.outputDir}"
         excludes="**/package.html">
      <manifest>
        <attribute name="Bundle-Description" value="Java(TM) Common Annotations ${project.version} API Design Specification"/>
        <attribute name="Bundle-Name" value="${project.name}"/>
        <attribute name="Bundle-SymbolicName" value="${project.artifactId}"/>
        <attribute name="Bundle-Version" value="${project.version}"/>
        <attribute name="Export-Package" value="javax.annotation.security;version=&quot;${project.version}.0&quot;,javax.annotation;version=&quot;${project.version}.0&quot;,javax.annotation.sql;version=&quot;${project.version}.0&quot;"/>
        <attribute name="Extension-Name" value="${project.groupId}"/>
        <attribute name="Implementation-Vendor" value="${project.organization.name}"/>
        <attribute name="Implementation-Vendor-Id" value="${implementation.vendor.id}"/>
        <attribute name="Implementation-Version" value="${project.version}"/>
        <attribute name="Specification-Version" value="${spec.version}"/>
        <attribute name="Specification-Vendor" value="${spec.vendor.name}"/>
      </manifest>
    </jar>
  </target>

  <!-- ====================================================================== -->
  <!-- A dummy target for the package named after the type it creates         -->
  <!-- ====================================================================== -->

  <target name="jar" depends="package" description="Builds the jar for the application"/>

  <target name="all" depends="jar,javadoc" description="Build the jar and javadoc"/>

</project>
