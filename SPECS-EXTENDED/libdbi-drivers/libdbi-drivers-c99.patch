Fix type errors in the cgreen with constraints facility.

Submitted upstream: <https://sourceforge.net/p/libdbi-drivers/bugs/28/>

diff --git a/tests/cgreen/src/constraint.c b/tests/cgreen/src/constraint.c
index c19c0ddd41a7bfa7..95673dd3e222a3cf 100644
--- a/tests/cgreen/src/constraint.c
+++ b/tests/cgreen/src/constraint.c
@@ -22,8 +22,7 @@ static double unbox_double(intptr_t box);
 static double as_double(intptr_t box);
 
 static int compare_using_matcher(Constraint *constraint, intptr_t actual);
-static void test_with_matcher(Constraint *constraint, const char *function, const char* matcher_name, intptr_t actual, const char *test_file, int test_line, TestReporter *reporter);
-
+static void test_with_matcher(Constraint *constraint, const char *function, intptr_t matcher_function, const char *test_file, int test_line, TestReporter *reporter);
 
 void destroy_constraint(void *abstract) {
     Constraint *constraint = (Constraint *)abstract;
@@ -164,11 +163,11 @@ static void test_want_double(Constraint *constraint, const char *function, intpt
 }
 
 static int compare_using_matcher(Constraint *constraint, intptr_t actual) {
-	int (*matches)(const void*) = constraint->expected;
-    return matches(actual);
+	int (*matches)(const void*) = (int (*)(const void*)) constraint->expected;
+    return matches((const void *)actual);
 }
 
-static void test_with_matcher(Constraint *constraint, const char *function, const char* matcher_name, intptr_t matcher_function, const char *test_file, int test_line, TestReporter *reporter) {
+static void test_with_matcher(Constraint *constraint, const char *function, intptr_t matcher_function, const char *test_file, int test_line, TestReporter *reporter) {
     (*reporter->assert_true)(
             reporter,
             test_file,
@@ -176,7 +175,7 @@ static void test_with_matcher(Constraint *constraint, const char *function, cons
             (*constraint->compare)(constraint, matcher_function),
             "Wanted parameter [%s] to match [%s] in function [%s]",
             constraint->parameter,
-            matcher_name,
+            constraint->name,
             function);
 }
 
