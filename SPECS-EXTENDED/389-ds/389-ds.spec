%global pkgname   dirsrv

# This is used in certain builds to help us know if it has extra features.
%global variant base
%global prerel __VERSION_PREREL__%{nil}

# This enables a sanitized build.
%bcond asan 0
%bcond msan 0
%bcond tsan 0
%bcond ubsan 0

%if %{with asan} || %{with msan} || %{with tsan} || %{with ubsan}
%global variant base-xsan
%endif

# Use Clang instead of GCC
%bcond clang 0
%if %{with msan}
%bcond clang 1
%endif

%if %{with clang}
%global toolchain clang
%global _missing_build_ids_terminate_build 0
%endif

# fedora 15 and later uses tmpfiles.d
# otherwise, comment this out
%{!?with_tmpfiles_d: %global with_tmpfiles_d %{_sysconfdir}/tmpfiles.d}

# systemd support
%global groupname %{pkgname}.target

# Filter argparse-manpage from autogenerated package Requires
%global __requires_exclude ^python.*argparse-manpage

# Force to require nss version greater or equal as the version available at the build time
# See bz1986327
%define dirsrv_requires_ge()  %(LC_ALL="C" echo '%*' | xargs -r rpm -q --qf 'Requires: %%{name} >= %%{epoch}:%%{version}\\n' | sed -e 's/ (none):/ /' -e 's/ 0:/ /' | grep -v "is not")

Summary:          389 Directory Server (%{variant})
Name:             389-ds-base
Version:          3.1.0
Release:          1%{?dist}
License:          GPLv3+ and (ASL 2.0 or MIT)
URL:              https://www.port389.org/
Obsoletes:        %{name} <= 1.4.0.9
Obsoletes:        %{name}-legacy-tools < 1.4.4.6
Obsoletes:        %{name}-legacy-tools-debuginfo < 1.4.4.6
Provides:         ldif2ldbm

##### Bundled cargo crates list - START #####
##### Bundled cargo crates list - END #####

# Attach the buildrequires to the top level package:
BuildRequires:    nspr-devel
BuildRequires:    nss-devel >= 3.34
BuildRequires:    openldap-clients
BuildRequires:    openldap-devel
BuildRequires:    lmdb-devel
BuildRequires:    cyrus-sasl-devel
BuildRequires:    icu
BuildRequires:    libicu-devel
BuildRequires:    libdb-devel
BuildRequires:    pcre2-devel
BuildRequires:    cracklib-devel
BuildRequires:    json-c-devel
%if %{with clang}
BuildRequires:    libatomic
BuildRequires:    clang
BuildRequires:    compiler-rt
BuildRequires:    lld
%else
BuildRequires:    gcc
BuildRequires:    gcc-c++
%if %{with asan}
BuildRequires:    libasan
%endif
%if %{with tsan}
BuildRequires:    libtsan
%endif
%if %{with ubsan}
BuildRequires:    libubsan
%endif
%endif

# The following are needed to build the snmp ldap-agent
BuildRequires:    net-snmp-devel
BuildRequires:    bzip2-devel
BuildRequires:    openssl-devel
# the following is for the pam passthru auth plug-in
BuildRequires:    pam-devel
BuildRequires:    systemd-units
BuildRequires:    systemd-devel
BuildRequires:    cargo
BuildRequires:    rust
BuildRequires:    pkgconfig
BuildRequires:    pkgconfig(systemd)
BuildRequires:    pkgconfig(krb5)
BuildRequires:    pkgconfig(libpcre2-8)
# Needed to support regeneration of the autotool artifacts.
BuildRequires:    autoconf
BuildRequires:    automake
BuildRequires:    libtool
# For our documentation
BuildRequires:    doxygen
# For tests!
BuildRequires:    libcmocka-devel
# For lib389 and related components.
BuildRequires:    python
BuildRequires:    python3-devel
BuildRequires:    python3-setuptools
BuildRequires:    python3-ldap
BuildRequires:    python3-pyasn1
BuildRequires:    python3-pyasn1-modules
BuildRequires:    python3-dateutil
BuildRequires:    python3-argcomplete
# TODO: Rename package to python-argparse-manpage
BuildRequires:    argparse-manpage
BuildRequires:    python3-policycoreutils
BuildRequires:    python3-libselinux
BuildRequires:    python3-cryptography

# END BUILD REQUIRES

# Now, attach the requires only to the package that needs them.
# -libs has most of our runtime libs
Requires:         %{name}-libs = %{version}-%{release}
Requires:         python3-lib389 = %{version}-%{release}

# this is needed for using semanage from our setup scripts
Requires:         policycoreutils-python-utils
# This is needed for our future move to python selinux interaction.
Requires:         libsemanage-python3
# the following are needed for some of our scripts
Requires:         openldap-clients
Requires:         acl
# this is needed to setup SSL if you are not using the
# administration server package
Requires:         nss-tools
%dirsrv_requires_ge nss
# these are not found by the auto-dependency method
# they are required to support the mandatory LDAP SASL mechs
Requires:         cyrus-sasl-gssapi
Requires:         cyrus-sasl-md5
# This is optionally supported by us, as we use it in our tests
Requires:         cyrus-sasl-plain
# this is needed for backldbm
Requires:         lmdb
Requires:         libdb
# This picks up libperl.so as a Requires, so we add this versioned one
Requires:         perl(:MODULE_COMPAT_%(eval "`%{__perl} -V:version`"; echo $version))
# Needed by logconv.pl
Requires:         perl-Archive-Tar
%if 0%{?fedora} >= 33 || 0%{?rhel} >= 9
Requires:         perl-debugger
Requires:         perl-sigtrap
%endif
# Needed for password dictionary checks
Requires:         cracklib-dicts
Requires:         json-c
# Log compression
Requires:         zlib-devel
# Picks up our systemd deps.
%{?systemd_requires}

Source0:          %{name}-%{version}.tar.bz2

%description
389 Directory Server is an LDAPv3 compliant server.  The base package includes
the LDAP server and command line utilities for server administration.
%if %{with asan}
WARNING! This build is linked to Address Sanitisation libraries. This probably
isn't what you want. Please contact support immediately.
Please see http://seclists.org/oss-sec/2016/q1/363 for more information.
%endif


%package          libs
Summary:          Core libraries for 389 Directory Server (%{variant})
Provides:         svrcore = 4.1.4
Obsoletes:        svrcore <= 4.1.3
Conflicts:        svrcore
# You can work this out by running LDD on libslapd.so to see what it needs in
# isolation.
%dirsrv_requires_ge nss
Requires:         nspr
Requires:         openldap
Requires:         systemd-libs
# Pull in sasl
Requires:         cyrus-sasl-lib
# KRB
Requires:         krb5-libs
%if %{with clang}
Requires:         llvm
Requires:         compiler-rt
%else
%if %{with asan}
Requires:         libasan
%endif
%if %{with tsan}
Requires:         libtsan
%endif
%if %{with ubsan}
Requires:         libubsan
%endif
%endif

%description      libs
Core libraries for the 389 Directory Server base package.  These libraries
are used by the main package and the -devel package.  This allows the -devel
package to be installed with just the -libs package and without the main package.

%package          devel
Summary:          Development libraries for 389 Directory Server (%{variant})
Provides:         svrcore-devel = 4.1.4
Obsoletes:        svrcore-devel <= 4.1.3
Conflicts:        svrcore-devel
Requires:         %{name}-libs = %{version}-%{release}
Requires:         pkgconfig
Requires:         nspr-devel
Requires:         nss-devel >= 3.34
Requires:         openldap-devel
# systemd-libs contains the headers iirc.
Requires:         systemd-libs

%description      devel
Development Libraries and headers for the 389 Directory Server base package.


%package          snmp
Summary:          SNMP Agent for 389 Directory Server
Requires:         %{name} = %{version}-%{release}
Obsoletes:        %{name} <= 1.3.5.4

%description      snmp
SNMP Agent for the 389 Directory Server base package.

%package -n python3-lib389
Summary:  A library for accessing, testing, and configuring the 389 Directory Server
BuildArch:        noarch
Requires: %{name} = %{version}-%{release}
Requires: openssl
# This is for /usr/bin/c_rehash tool, only needed for openssl < 1.1.0
Requires: openssl-perl
Requires: iproute
Requires: python3
Requires: python3-distro
Requires: python3-pytest
Requires: python3-ldap
Requires: python3-pyasn1
Requires: python3-pyasn1-modules
Requires: python3-dateutil
Requires: python3-argcomplete
Requires: python3-libselinux
Requires: python3-setuptools
Requires: python3-cryptography
Recommends: bash-completion
%{?python_provide:%python_provide python3-lib389}

%description -n python3-lib389
This module contains tools and libraries for accessing, testing,
 and configuring the 389 Directory Server.

%prep
%setup -q -n %{name}-%{version}

%build

%if %{with clang}
CLANG_FLAGS="--enable-clang"
%endif

%{?with_tmpfiles_d: TMPFILES_FLAG="--with-tmpfiles-d=%{with_tmpfiles_d}"}

%if %{with asan}
ASAN_FLAGS="--enable-asan --enable-debug"
%endif

%if %{with msan}
MSAN_FLAGS="--enable-msan --enable-debug"
%endif

%if %{with tsan}
TSAN_FLAGS="--enable-tsan --enable-debug"
%endif

%if %{with ubsan}
UBSAN_FLAGS="--enable-ubsan --enable-debug"
%endif

RUST_FLAGS="--enable-rust --enable-rust-offline"

# Rebuild the autotool artifacts now.
autoreconf -fiv

%configure \
           --with-selinux $TMPFILES_FLAG \
           --with-systemd \
           --with-systemdsystemunitdir=%{_unitdir} \
           --with-systemdsystemconfdir=%{_sysconfdir}/systemd/system \
           --with-systemdgroupname=%{groupname} \
           --libexecdir=%{_libexecdir}/%{pkgname} \
           --disable-cockpit \
           $ASAN_FLAGS $MSAN_FLAGS $TSAN_FLAGS $UBSAN_FLAGS $RUST_FLAGS $CLANG_FLAGS \
%if 0%{?fedora} >= 34 || 0%{?rhel} >= 9
           --with-libldap-r=no \
%endif
           --enable-cmocka

# Avoid "Unknown key name 'XXX' in section 'Service', ignoring." warnings from systemd on older releases
%if 0%{?rhel} && 0%{?rhel} < 9
  sed -r -i '/^(Protect(Home|Hostname|KernelLogs)|PrivateMounts)=/d' %{_builddir}/%{name}-%{version}/wrappers/*.service.in
%endif

# lib389
make src/lib389/setup.py
pushd ./src/lib389
%py3_build
popd
# argparse-manpage dynamic man pages have hardcoded man v1 in header,
# need to change it to v8
sed -i  "1s/\"1\"/\"8\"/" %{_builddir}/%{name}-%{version}/src/lib389/man/dsconf.8
sed -i  "1s/\"1\"/\"8\"/" %{_builddir}/%{name}-%{version}/src/lib389/man/dsctl.8
sed -i  "1s/\"1\"/\"8\"/" %{_builddir}/%{name}-%{version}/src/lib389/man/dsidm.8
sed -i  "1s/\"1\"/\"8\"/" %{_builddir}/%{name}-%{version}/src/lib389/man/dscreate.8

# Generate symbolic info for debuggers
export XCFLAGS=$RPM_OPT_FLAGS

make %{?_smp_mflags}

%install

mkdir -p %{buildroot}%{_datadir}/gdb/auto-load%{_sbindir}
make DESTDIR="$RPM_BUILD_ROOT" install

find %{buildroot}%{_libdir}/%{pkgname}/plugins/ -type f -iname 'lib*.so' | sed -e "s@%{buildroot}@@" > plugins.list

# Copy in our docs from doxygen.
cp -r %{_builddir}/%{name}-%{version}/man/man3 $RPM_BUILD_ROOT/%{_mandir}/man3

# lib389
pushd src/lib389
%py3_install
popd

# Register CLI tools for bash completion
for clitool in dsconf dsctl dsidm dscreate ds-replcheck
do
    register-python-argcomplete "${clitool}" > "${clitool}"
    install -p -m 0644 -D -t '%{buildroot}/usr/share/bash-completion/' "${clitool}"
done

mkdir -p $RPM_BUILD_ROOT/var/log/%{pkgname}
mkdir -p $RPM_BUILD_ROOT/var/lib/%{pkgname}
mkdir -p $RPM_BUILD_ROOT/var/lock/%{pkgname} \
    && chmod 770 $RPM_BUILD_ROOT/var/lock/%{pkgname}

# for systemd
mkdir -p $RPM_BUILD_ROOT%{_sysconfdir}/systemd/system/%{groupname}.wants

#remove libtool and static libs
rm -f $RPM_BUILD_ROOT%{_libdir}/%{pkgname}/*.a
rm -f $RPM_BUILD_ROOT%{_libdir}/%{pkgname}/*.la
rm -f $RPM_BUILD_ROOT%{_libdir}/%{pkgname}/plugins/*.a
rm -f $RPM_BUILD_ROOT%{_libdir}/%{pkgname}/plugins/*.la
rm -f $RPM_BUILD_ROOT%{_libdir}/libsvrcore.a
rm -f $RPM_BUILD_ROOT%{_libdir}/libsvrcore.la


%check
# This checks the code, if it fails it prints why, then re-raises the fail to shortcircuit the rpm build.
%if %{with tsan}
export TSAN_OPTIONS=print_stacktrace=1:second_deadlock_stack=1:history_size=7
%endif
%if %{without asan} && %{without msan}
if ! make DESTDIR="$RPM_BUILD_ROOT" check; then cat ./test-suite.log && false; fi
%endif

%post
if [ -n "$DEBUGPOSTTRANS" ] ; then
    output=$DEBUGPOSTTRANS
    output2=${DEBUGPOSTTRANS}.upgrade
else
    output=/dev/null
    output2=/dev/null
fi

# reload to pick up any changes to systemd files
/bin/systemctl daemon-reload >$output 2>&1 || :

# find all instances
instances="" # instances that require a restart after upgrade
ninst=0 # number of instances found in total

# https://fedoraproject.org/wiki/Packaging:UsersAndGroups#Soft_static_allocation
# Soft static allocation for UID and GID
USERNAME="dirsrv"
ALLOCATED_UID=389
GROUPNAME="dirsrv"
ALLOCATED_GID=389
HOMEDIR="/usr/share/dirsrv"

getent group $GROUPNAME >/dev/null || groupadd -f -g $ALLOCATED_GID -r $GROUPNAME
if ! getent passwd $USERNAME >/dev/null ; then
    if ! getent passwd $ALLOCATED_UID >/dev/null ; then
      useradd -r -u $ALLOCATED_UID -g $GROUPNAME -d $HOMEDIR -s /sbin/nologin -c "user for 389-ds-base" $USERNAME
    else
      useradd -r -g $GROUPNAME -d $HOMEDIR -s /sbin/nologin -c "user for 389-ds-base" $USERNAME
    fi
fi

# Reload our sysctl before we restart (if we can)
sysctl --system &> $output; true

# Gather the running instances so we can restart them
instbase="%{_sysconfdir}/%{pkgname}"
ninst=0
for dir in $instbase/slapd-* ; do
    echo dir = $dir >> $output 2>&1 || :
    if [ ! -d "$dir" ] ; then continue ; fi
    case "$dir" in *.removed) continue ;; esac
    basename=`basename $dir`
    inst="%{pkgname}@`echo $basename | sed -e 's/slapd-//g'`"
    echo found instance $inst - getting status  >> $output 2>&1 || :
    if /bin/systemctl -q is-active $inst ; then
       echo instance $inst is running >> $output 2>&1 || :
       instances="$instances $inst"
    else
       echo instance $inst is not running >> $output 2>&1 || :
    fi
    ninst=`expr $ninst + 1`
done
if [ $ninst -eq 0 ] ; then
    echo no instances to upgrade >> $output 2>&1 || :
    exit 0 # have no instances to upgrade - just skip the rest
else
    # restart running instances
    echo shutting down all instances . . . >> $output 2>&1 || :
    for inst in $instances ; do
        echo stopping instance $inst >> $output 2>&1 || :
        /bin/systemctl stop $inst >> $output 2>&1 || :
    done
    for inst in $instances ; do
        echo starting instance $inst >> $output 2>&1 || :
        /bin/systemctl start $inst >> $output 2>&1 || :
    done
fi


%preun
if [ $1 -eq 0 ]; then # Final removal
    # remove instance specific service files/links
    rm -rf %{_sysconfdir}/systemd/system/%{groupname}.wants/* > /dev/null 2>&1 || :
fi

%postun
if [ $1 = 0 ]; then # Final removal
    rm -rf /var/run/%{pkgname}
fi

%post snmp
%systemd_post %{pkgname}-snmp.service

%preun snmp
%systemd_preun %{pkgname}-snmp.service %{groupname}

%postun snmp
%systemd_postun_with_restart %{pkgname}-snmp.service


%files -f plugins.list
%doc LICENSE LICENSE.GPLv3+ LICENSE.openssl
%dir %{_sysconfdir}/%{pkgname}
%dir %{_sysconfdir}/%{pkgname}/schema
%config(noreplace)%{_sysconfdir}/%{pkgname}/schema/*.ldif
%dir %{_sysconfdir}/%{pkgname}/config
%dir %{_sysconfdir}/systemd/system/%{groupname}.wants
%config(noreplace)%{_sysconfdir}/%{pkgname}/config/slapd-collations.conf
%config(noreplace)%{_sysconfdir}/%{pkgname}/config/certmap.conf
%{_datadir}/%{pkgname}
%{_datadir}/gdb/auto-load/*
%{_unitdir}
%{_bindir}/dbscan
%{_mandir}/man1/dbscan.1.gz
%{_bindir}/ds-replcheck
%{_mandir}/man1/ds-replcheck.1.gz
%{_datadir}/bash-completion/ds-replcheck
%{_bindir}/ds-logpipe.py
%{_mandir}/man1/ds-logpipe.py.1.gz
%{_bindir}/ldclt
%{_mandir}/man1/ldclt.1.gz
%{_bindir}/logconv.pl
%{_mandir}/man1/logconv.pl.1.gz
%{_bindir}/pwdhash
%{_mandir}/man1/pwdhash.1.gz
%{_sbindir}/ns-slapd
%{_mandir}/man8/ns-slapd.8.gz
%{_sbindir}/openldap_to_ds
%{_mandir}/man8/openldap_to_ds.8.gz
%{_libexecdir}/%{pkgname}/ds_systemd_ask_password_acl
%{_libexecdir}/%{pkgname}/ds_selinux_restorecon.sh
%{_mandir}/man5/99user.ldif.5.gz
%{_mandir}/man5/certmap.conf.5.gz
%{_mandir}/man5/slapd-collations.conf.5.gz
%{_mandir}/man5/dirsrv.5.gz
%{_mandir}/man5/dirsrv.systemd.5.gz
%{_libdir}/%{pkgname}/python
%dir %{_libdir}/%{pkgname}/plugins
# This has to be hardcoded to /lib - $libdir changes between lib/lib64, but
# sysctl.d is always in /lib.
%{_prefix}/lib/sysctl.d/*
%dir %{_localstatedir}/lib/%{pkgname}
%dir %{_localstatedir}/log/%{pkgname}
%ghost %dir %{_localstatedir}/lock/%{pkgname}
%exclude %{_sbindir}/ldap-agent*
%exclude %{_mandir}/man1/ldap-agent.1.gz
%exclude %{_unitdir}/%{pkgname}-snmp.service

%files devel
%doc LICENSE LICENSE.GPLv3+ LICENSE.openssl
%{_mandir}/man3/*
%{_includedir}/svrcore.h
%{_includedir}/%{pkgname}
%{_libdir}/libsvrcore.so
%{_libdir}/%{pkgname}/libslapd.so
%{_libdir}/%{pkgname}/libns-dshttpd.so
%{_libdir}/%{pkgname}/libldaputil.so
%{_libdir}/pkgconfig/svrcore.pc
%{_libdir}/pkgconfig/dirsrv.pc

%files libs
%doc LICENSE LICENSE.GPLv3+ LICENSE.openssl
%dir %{_libdir}/%{pkgname}
%{_libdir}/libsvrcore.so.*
%{_libdir}/%{pkgname}/libslapd.so.*
%{_libdir}/%{pkgname}/libns-dshttpd.so.*
%{_libdir}/%{pkgname}/libldaputil.so.*
%{_libdir}/%{pkgname}/librewriters.so*

%files snmp
%doc LICENSE LICENSE.GPLv3+ LICENSE.openssl
%config(noreplace)%{_sysconfdir}/%{pkgname}/config/ldap-agent.conf
%{_sbindir}/ldap-agent*
%{_mandir}/man1/ldap-agent.1.gz
%{_unitdir}/%{pkgname}-snmp.service

%files -n python3-lib389
%doc LICENSE LICENSE.GPLv3+
%{python3_sitelib}/lib389*
%{_sbindir}/dsconf
%{_mandir}/man8/dsconf.8.gz
%{_sbindir}/dscreate
%{_mandir}/man8/dscreate.8.gz
%{_sbindir}/dsctl
%{_mandir}/man8/dsctl.8.gz
%{_sbindir}/dsidm
%{_mandir}/man8/dsidm.8.gz
%{_libexecdir}/%{pkgname}/dscontainer
%{_datadir}/bash-completion/dsctl
%{_datadir}/bash-completion/dsconf
%{_datadir}/bash-completion/dscreate
%{_datadir}/bash-completion/dsidm

%changelog
* Mon Jun 17 2024 Andy Zaugg <azaugg@linkedin.com> - 3.1.0-1
- Initial CBL-Mariner import from 389-ds-base source (license: GPLv3+)
- License verified
