The ISO installer uses an attended_config.json file, generated by the toolkit from a configuration file, 
to facilitate OS installation. Imagecustomizer relies on the ISO installer and requires all necessary files 
including imager, liveinstaller, package list files, and attended_config.json to be present for ISO creation. 
Currently, manual intervention is necessary to update attended_config.json for Azure Linux 64k HWE ISO (attended_config_aarch64_64k_hwe.json).
Please note, each package json file should be included under both the ISO and OS sections in the imageconfigs/full-64k-hwe-arm64.yaml file.
This will ensure generation of all required RPM packages for ISO installer.
In the future, the Image Customizer tool will support fully automated end-to-end creation of the installer iso.
For guidance on configuring attended_config_aarch64_64k_hwe.json, users should reference toolkit/imageconfigs/full-aarch64.json.
Image Customizer tool requires that all necessary RPM packages for the target OS installation are available in the /RPMS directory.
To obtain RPM packages from PMC, users may refer to the following sample post-installation script, which should be updated in
`imageconfigs/postinstallscripts/imagecustomizer/isoinstaller_postinstalltask.sh`.

# Sample post installation script for retrieving RPM Packages from PMC for Arm64 64K HWE ISO Installer
# isoinstaller_postinstalltask.sh

# Create RPMS directory
mkdir /RPMS

# Path to the main config JSON
CONFIG_JSON="/config/attended_config.json"
CONFIG_DIR="$(dirname "$CONFIG_JSON")"

echo "CONFIG_DIR: $CONFIG_DIR"
echo "CONFIG_JSON: $CONFIG_JSON"

# Find all package list files referenced in the config
pkglist_files=( $(jq -r '.SystemConfigs[].PackageLists[]' "$CONFIG_JSON") )

# Recursively parse and add each package and it dependencies to RPMS folder
for pkglist in "${pkglist_files[@]}"; do
    # Make path relative to config file directory
    full_path="$CONFIG_DIR/$pkglist"
    if [[ -f "$full_path" ]]; then
        tdnf -y install --downloadonly --alldeps --nogpgcheck --downloaddir /RPMS $(jq -r '.packages[]' "$full_path")
    fi
done

# Get kernel packages from KernelOptions (if present)
tdnf -y install --downloadonly --alldeps --nogpgcheck --downloaddir /RPMS $(jq -r '.SystemConfigs[] | select(.KernelOptions) | .KernelOptions[]' "$CONFIG_JSON")


# Create local ISO repo for RPMS directory
createrepo /RPMS

# RPM packages are generated under rootfs RPMS folder.
# Hence update baseurl path
sed -i 's|baseurl=file:///mnt/cdrom/RPMS|baseurl=file:///RPMS|' /etc/yum.repos.d/mariner-iso.repo

# RPM packages should be installed from ISO local repo
# Remove PMC official base repo from ISO
rm -r /etc/yum.repos.d/azurelinux-official-base.rep

# end of isoinstaller_postinstalltask.sh
